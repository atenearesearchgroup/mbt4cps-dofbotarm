/*
 * generated by Xtext 2.21.0
 */
grammar InternalMyWorldDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package lsi.us.es.mis.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package lsi.us.es.mis.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import lsi.us.es.mis.xtext.services.MyWorldDslGrammarAccess;

}

@parser::members {

 	private MyWorldDslGrammarAccess grammarAccess;

    public InternalMyWorldDslParser(TokenStream input, MyWorldDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "World";
   	}

   	@Override
   	protected MyWorldDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleWorld
entryRuleWorld returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWorldRule()); }
	iv_ruleWorld=ruleWorld
	{ $current=$iv_ruleWorld.current; }
	EOF;

// Rule World
ruleWorld returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getWorldAccess().getSpacesSpaceParserRuleCall_0());
			}
			lv_spaces_0_0=ruleSpace
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getWorldRule());
				}
				add(
					$current,
					"spaces",
					lv_spaces_0_0,
					"lsi.us.es.mis.xtext.MyWorldDsl.Space");
				afterParserOrEnumRuleCall();
			}
		)
	)+
;

// Entry rule entryRuleSpace
entryRuleSpace returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSpaceRule()); }
	iv_ruleSpace=ruleSpace
	{ $current=$iv_ruleSpace.current; }
	EOF;

// Rule Space
ruleSpace returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getSpaceAccess().getContinentParserRuleCall_0());
		}
		this_Continent_0=ruleContinent
		{
			$current = $this_Continent_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getSpaceAccess().getWaterParserRuleCall_1());
		}
		this_Water_1=ruleWater
		{
			$current = $this_Water_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleWater
entryRuleWater returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWaterRule()); }
	iv_ruleWater=ruleWater
	{ $current=$iv_ruleWater.current; }
	EOF;

// Rule Water
ruleWater returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getWaterAccess().getOceanParserRuleCall_0());
		}
		this_Ocean_0=ruleOcean
		{
			$current = $this_Ocean_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWaterAccess().getLakeParserRuleCall_1());
		}
		this_Lake_1=ruleLake
		{
			$current = $this_Lake_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getWaterAccess().getSeaParserRuleCall_2());
		}
		this_Sea_2=ruleSea
		{
			$current = $this_Sea_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleOcean
entryRuleOcean returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOceanRule()); }
	iv_ruleOcean=ruleOcean
	{ $current=$iv_ruleOcean.current; }
	EOF;

// Rule Ocean
ruleOcean returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Ocean'
		{
			newLeafNode(otherlv_0, grammarAccess.getOceanAccess().getOceanKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getOceanAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOceanRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getOceanAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='area (sq km):'
		{
			newLeafNode(otherlv_3, grammarAccess.getOceanAccess().getAreaSqKmKeyword_3());
		}
		(
			(
				lv_area_4_0=RULE_DOUBLE
				{
					newLeafNode(lv_area_4_0, grammarAccess.getOceanAccess().getAreaDOUBLETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOceanRule());
					}
					setWithLastConsumed(
						$current,
						"area",
						lv_area_4_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		otherlv_5='volume (cu km):'
		{
			newLeafNode(otherlv_5, grammarAccess.getOceanAccess().getVolumeCuKmKeyword_5());
		}
		(
			(
				lv_ck_6_0=RULE_DOUBLE
				{
					newLeafNode(lv_ck_6_0, grammarAccess.getOceanAccess().getCkDOUBLETerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getOceanRule());
					}
					setWithLastConsumed(
						$current,
						"ck",
						lv_ck_6_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getOceanAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleLake
entryRuleLake returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLakeRule()); }
	iv_ruleLake=ruleLake
	{ $current=$iv_ruleLake.current; }
	EOF;

// Rule Lake
ruleLake returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Lake'
		{
			newLeafNode(otherlv_0, grammarAccess.getLakeAccess().getLakeKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getLakeAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLakeRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getLakeAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='area (sq km):'
		{
			newLeafNode(otherlv_3, grammarAccess.getLakeAccess().getAreaSqKmKeyword_3());
		}
		(
			(
				lv_area_4_0=RULE_DOUBLE
				{
					newLeafNode(lv_area_4_0, grammarAccess.getLakeAccess().getAreaDOUBLETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLakeRule());
					}
					setWithLastConsumed(
						$current,
						"area",
						lv_area_4_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		otherlv_5='volume (cu km):'
		{
			newLeafNode(otherlv_5, grammarAccess.getLakeAccess().getVolumeCuKmKeyword_5());
		}
		(
			(
				lv_ck_6_0=RULE_DOUBLE
				{
					newLeafNode(lv_ck_6_0, grammarAccess.getLakeAccess().getCkDOUBLETerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLakeRule());
					}
					setWithLastConsumed(
						$current,
						"ck",
						lv_ck_6_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getLakeAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleSea
entryRuleSea returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSeaRule()); }
	iv_ruleSea=ruleSea
	{ $current=$iv_ruleSea.current; }
	EOF;

// Rule Sea
ruleSea returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Sea'
		{
			newLeafNode(otherlv_0, grammarAccess.getSeaAccess().getSeaKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getSeaAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSeaRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getSeaAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='area (sq km):'
		{
			newLeafNode(otherlv_3, grammarAccess.getSeaAccess().getAreaSqKmKeyword_3());
		}
		(
			(
				lv_area_4_0=RULE_DOUBLE
				{
					newLeafNode(lv_area_4_0, grammarAccess.getSeaAccess().getAreaDOUBLETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSeaRule());
					}
					setWithLastConsumed(
						$current,
						"area",
						lv_area_4_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		otherlv_5='volume (cu km):'
		{
			newLeafNode(otherlv_5, grammarAccess.getSeaAccess().getVolumeCuKmKeyword_5());
		}
		(
			(
				lv_ck_6_0=RULE_DOUBLE
				{
					newLeafNode(lv_ck_6_0, grammarAccess.getSeaAccess().getCkDOUBLETerminalRuleCall_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSeaRule());
					}
					setWithLastConsumed(
						$current,
						"ck",
						lv_ck_6_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		otherlv_7='}'
		{
			newLeafNode(otherlv_7, grammarAccess.getSeaAccess().getRightCurlyBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleContinent
entryRuleContinent returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContinentRule()); }
	iv_ruleContinent=ruleContinent
	{ $current=$iv_ruleContinent.current; }
	EOF;

// Rule Continent
ruleContinent returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Continent'
		{
			newLeafNode(otherlv_0, grammarAccess.getContinentAccess().getContinentKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getContinentAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContinentRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getContinentAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='area (sq km):'
		{
			newLeafNode(otherlv_3, grammarAccess.getContinentAccess().getAreaSqKmKeyword_3());
		}
		(
			(
				lv_area_4_0=RULE_DOUBLE
				{
					newLeafNode(lv_area_4_0, grammarAccess.getContinentAccess().getAreaDOUBLETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getContinentRule());
					}
					setWithLastConsumed(
						$current,
						"area",
						lv_area_4_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getContinentAccess().getCountriesCountryParserRuleCall_5_0());
				}
				lv_countries_5_0=ruleCountry
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContinentRule());
					}
					add(
						$current,
						"countries",
						lv_countries_5_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.Country");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getContinentAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCountry
entryRuleCountry returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCountryRule()); }
	iv_ruleCountry=ruleCountry
	{ $current=$iv_ruleCountry.current; }
	EOF;

// Rule Country
ruleCountry returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Country'
		{
			newLeafNode(otherlv_0, grammarAccess.getCountryAccess().getCountryKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getCountryAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountryRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getCountryAccess().getLeftCurlyBracketKeyword_2());
		}
		otherlv_3='area (sq km):'
		{
			newLeafNode(otherlv_3, grammarAccess.getCountryAccess().getAreaSqKmKeyword_3());
		}
		(
			(
				lv_area_4_0=RULE_DOUBLE
				{
					newLeafNode(lv_area_4_0, grammarAccess.getCountryAccess().getAreaDOUBLETerminalRuleCall_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountryRule());
					}
					setWithLastConsumed(
						$current,
						"area",
						lv_area_4_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		(
			(
				lv_peaceful_5_0='peaceful'
				{
					newLeafNode(lv_peaceful_5_0, grammarAccess.getCountryAccess().getPeacefulPeacefulKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountryRule());
					}
					setWithLastConsumed($current, "peaceful", true, "peaceful");
				}
			)
		)?
		otherlv_6='population:'
		{
			newLeafNode(otherlv_6, grammarAccess.getCountryAccess().getPopulationKeyword_6());
		}
		(
			(
				lv_population_7_0=RULE_DOUBLE
				{
					newLeafNode(lv_population_7_0, grammarAccess.getCountryAccess().getPopulationDOUBLETerminalRuleCall_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCountryRule());
					}
					setWithLastConsumed(
						$current,
						"population",
						lv_population_7_0,
						"lsi.us.es.mis.xtext.MyWorldDsl.DOUBLE");
				}
			)
		)
		(
			otherlv_8='borders:'
			{
				newLeafNode(otherlv_8, grammarAccess.getCountryAccess().getBordersKeyword_8_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCountryRule());
						}
					}
					otherlv_9=RULE_ID
					{
						newLeafNode(otherlv_9, grammarAccess.getCountryAccess().getBordersCountryCrossReference_8_1_0());
					}
				)
			)+
		)?
		(
			otherlv_10='washedBy:'
			{
				newLeafNode(otherlv_10, grammarAccess.getCountryAccess().getWashedByKeyword_9_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getCountryRule());
						}
					}
					otherlv_11=RULE_ID
					{
						newLeafNode(otherlv_11, grammarAccess.getCountryAccess().getWashedByWaterCrossReference_9_1_0());
					}
				)
			)*
		)*
		otherlv_12='}'
		{
			newLeafNode(otherlv_12, grammarAccess.getCountryAccess().getRightCurlyBracketKeyword_10());
		}
	)
;

RULE_DOUBLE : ('-' ' '*)? RULE_INT ('.' RULE_INT)?;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

fragment RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
