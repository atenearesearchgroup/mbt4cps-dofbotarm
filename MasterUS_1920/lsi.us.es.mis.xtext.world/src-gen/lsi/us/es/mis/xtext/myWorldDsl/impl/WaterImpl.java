/**
 * generated by Xtext 2.21.0
 */
package lsi.us.es.mis.xtext.myWorldDsl.impl;

import lsi.us.es.mis.xtext.myWorldDsl.MyWorldDslPackage;
import lsi.us.es.mis.xtext.myWorldDsl.Water;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Water</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.WaterImpl#getCk <em>Ck</em>}</li>
 * </ul>
 *
 * @generated
 */
public class WaterImpl extends SpaceImpl implements Water
{
  /**
   * The default value of the '{@link #getCk() <em>Ck</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCk()
   * @generated
   * @ordered
   */
  protected static final String CK_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCk() <em>Ck</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCk()
   * @generated
   * @ordered
   */
  protected String ck = CK_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected WaterImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyWorldDslPackage.Literals.WATER;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCk()
  {
    return ck;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCk(String newCk)
  {
    String oldCk = ck;
    ck = newCk;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyWorldDslPackage.WATER__CK, oldCk, ck));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.WATER__CK:
        return getCk();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.WATER__CK:
        setCk((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.WATER__CK:
        setCk(CK_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.WATER__CK:
        return CK_EDEFAULT == null ? ck != null : !CK_EDEFAULT.equals(ck);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ck: ");
    result.append(ck);
    result.append(')');
    return result.toString();
  }

} //WaterImpl
