/**
 * generated by Xtext 2.21.0
 */
package lsi.us.es.mis.xtext.myWorldDsl.impl;

import java.util.Collection;

import lsi.us.es.mis.xtext.myWorldDsl.Country;
import lsi.us.es.mis.xtext.myWorldDsl.MyWorldDslPackage;
import lsi.us.es.mis.xtext.myWorldDsl.Water;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectResolvingEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Country</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.CountryImpl#getName <em>Name</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.CountryImpl#getArea <em>Area</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.CountryImpl#isPeaceful <em>Peaceful</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.CountryImpl#getPopulation <em>Population</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.CountryImpl#getBorders <em>Borders</em>}</li>
 *   <li>{@link lsi.us.es.mis.xtext.myWorldDsl.impl.CountryImpl#getWashedBy <em>Washed By</em>}</li>
 * </ul>
 *
 * @generated
 */
public class CountryImpl extends MinimalEObjectImpl.Container implements Country
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getArea() <em>Area</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArea()
   * @generated
   * @ordered
   */
  protected static final String AREA_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getArea() <em>Area</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getArea()
   * @generated
   * @ordered
   */
  protected String area = AREA_EDEFAULT;

  /**
   * The default value of the '{@link #isPeaceful() <em>Peaceful</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPeaceful()
   * @generated
   * @ordered
   */
  protected static final boolean PEACEFUL_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isPeaceful() <em>Peaceful</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isPeaceful()
   * @generated
   * @ordered
   */
  protected boolean peaceful = PEACEFUL_EDEFAULT;

  /**
   * The default value of the '{@link #getPopulation() <em>Population</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPopulation()
   * @generated
   * @ordered
   */
  protected static final String POPULATION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getPopulation() <em>Population</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getPopulation()
   * @generated
   * @ordered
   */
  protected String population = POPULATION_EDEFAULT;

  /**
   * The cached value of the '{@link #getBorders() <em>Borders</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getBorders()
   * @generated
   * @ordered
   */
  protected EList<Country> borders;

  /**
   * The cached value of the '{@link #getWashedBy() <em>Washed By</em>}' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getWashedBy()
   * @generated
   * @ordered
   */
  protected EList<Water> washedBy;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected CountryImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyWorldDslPackage.Literals.COUNTRY;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyWorldDslPackage.COUNTRY__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getArea()
  {
    return area;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setArea(String newArea)
  {
    String oldArea = area;
    area = newArea;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyWorldDslPackage.COUNTRY__AREA, oldArea, area));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isPeaceful()
  {
    return peaceful;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPeaceful(boolean newPeaceful)
  {
    boolean oldPeaceful = peaceful;
    peaceful = newPeaceful;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyWorldDslPackage.COUNTRY__PEACEFUL, oldPeaceful, peaceful));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getPopulation()
  {
    return population;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setPopulation(String newPopulation)
  {
    String oldPopulation = population;
    population = newPopulation;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyWorldDslPackage.COUNTRY__POPULATION, oldPopulation, population));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Country> getBorders()
  {
    if (borders == null)
    {
      borders = new EObjectResolvingEList<Country>(Country.class, this, MyWorldDslPackage.COUNTRY__BORDERS);
    }
    return borders;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<Water> getWashedBy()
  {
    if (washedBy == null)
    {
      washedBy = new EObjectResolvingEList<Water>(Water.class, this, MyWorldDslPackage.COUNTRY__WASHED_BY);
    }
    return washedBy;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.COUNTRY__NAME:
        return getName();
      case MyWorldDslPackage.COUNTRY__AREA:
        return getArea();
      case MyWorldDslPackage.COUNTRY__PEACEFUL:
        return isPeaceful();
      case MyWorldDslPackage.COUNTRY__POPULATION:
        return getPopulation();
      case MyWorldDslPackage.COUNTRY__BORDERS:
        return getBorders();
      case MyWorldDslPackage.COUNTRY__WASHED_BY:
        return getWashedBy();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.COUNTRY__NAME:
        setName((String)newValue);
        return;
      case MyWorldDslPackage.COUNTRY__AREA:
        setArea((String)newValue);
        return;
      case MyWorldDslPackage.COUNTRY__PEACEFUL:
        setPeaceful((Boolean)newValue);
        return;
      case MyWorldDslPackage.COUNTRY__POPULATION:
        setPopulation((String)newValue);
        return;
      case MyWorldDslPackage.COUNTRY__BORDERS:
        getBorders().clear();
        getBorders().addAll((Collection<? extends Country>)newValue);
        return;
      case MyWorldDslPackage.COUNTRY__WASHED_BY:
        getWashedBy().clear();
        getWashedBy().addAll((Collection<? extends Water>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.COUNTRY__NAME:
        setName(NAME_EDEFAULT);
        return;
      case MyWorldDslPackage.COUNTRY__AREA:
        setArea(AREA_EDEFAULT);
        return;
      case MyWorldDslPackage.COUNTRY__PEACEFUL:
        setPeaceful(PEACEFUL_EDEFAULT);
        return;
      case MyWorldDslPackage.COUNTRY__POPULATION:
        setPopulation(POPULATION_EDEFAULT);
        return;
      case MyWorldDslPackage.COUNTRY__BORDERS:
        getBorders().clear();
        return;
      case MyWorldDslPackage.COUNTRY__WASHED_BY:
        getWashedBy().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyWorldDslPackage.COUNTRY__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case MyWorldDslPackage.COUNTRY__AREA:
        return AREA_EDEFAULT == null ? area != null : !AREA_EDEFAULT.equals(area);
      case MyWorldDslPackage.COUNTRY__PEACEFUL:
        return peaceful != PEACEFUL_EDEFAULT;
      case MyWorldDslPackage.COUNTRY__POPULATION:
        return POPULATION_EDEFAULT == null ? population != null : !POPULATION_EDEFAULT.equals(population);
      case MyWorldDslPackage.COUNTRY__BORDERS:
        return borders != null && !borders.isEmpty();
      case MyWorldDslPackage.COUNTRY__WASHED_BY:
        return washedBy != null && !washedBy.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", area: ");
    result.append(area);
    result.append(", peaceful: ");
    result.append(peaceful);
    result.append(", population: ");
    result.append(population);
    result.append(')');
    return result.toString();
  }

} //CountryImpl
