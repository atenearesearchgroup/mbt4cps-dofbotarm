/*
 * generated by Xtext 2.21.0
 */
grammar InternalMyFamilyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package lsi.us.es.mis.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package lsi.us.es.mis.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import lsi.us.es.mis.xtext.services.MyFamilyDslGrammarAccess;

}

@parser::members {

 	private MyFamilyDslGrammarAccess grammarAccess;

    public InternalMyFamilyDslParser(TokenStream input, MyFamilyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Family";
   	}

   	@Override
   	protected MyFamilyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleFamily
entryRuleFamily returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFamilyRule()); }
	iv_ruleFamily=ruleFamily
	{ $current=$iv_ruleFamily.current; }
	EOF;

// Rule Family
ruleFamily returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Family'
		{
			newLeafNode(otherlv_0, grammarAccess.getFamilyAccess().getFamilyKeyword_0());
		}
		(
			(
				lv_surname_1_0=RULE_STRING
				{
					newLeafNode(lv_surname_1_0, grammarAccess.getFamilyAccess().getSurnameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFamilyRule());
					}
					setWithLastConsumed(
						$current,
						"surname",
						lv_surname_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		otherlv_2='{'
		{
			newLeafNode(otherlv_2, grammarAccess.getFamilyAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getFamilyAccess().getPersonsPersonParserRuleCall_3_0());
				}
				lv_persons_3_0=rulePerson
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getFamilyRule());
					}
					add(
						$current,
						"persons",
						lv_persons_3_0,
						"lsi.us.es.mis.xtext.MyFamilyDsl.Person");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_4='}'
		{
			newLeafNode(otherlv_4, grammarAccess.getFamilyAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRulePerson
entryRulePerson returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPersonRule()); }
	iv_rulePerson=rulePerson
	{ $current=$iv_rulePerson.current; }
	EOF;

// Rule Person
rulePerson returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPersonAccess().getManParserRuleCall_0());
		}
		this_Man_0=ruleMan
		{
			$current = $this_Man_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPersonAccess().getWomanParserRuleCall_1());
		}
		this_Woman_1=ruleWoman
		{
			$current = $this_Woman_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleMan
entryRuleMan returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getManRule()); }
	iv_ruleMan=ruleMan
	{ $current=$iv_ruleMan.current; }
	EOF;

// Rule Man
ruleMan returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Man'
		{
			newLeafNode(otherlv_0, grammarAccess.getManAccess().getManKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getManAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getManRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2='parents:'
			{
				newLeafNode(otherlv_2, grammarAccess.getManAccess().getParentsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getManRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getManAccess().getParentsPersonCrossReference_2_1_0());
					}
				)
			)+
		)?
		(
			otherlv_4='children:'
			{
				newLeafNode(otherlv_4, grammarAccess.getManAccess().getChildrenKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getManRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getManAccess().getChildrenPersonCrossReference_3_1_0());
					}
				)
			)+
		)?
	)
;

// Entry rule entryRuleWoman
entryRuleWoman returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWomanRule()); }
	iv_ruleWoman=ruleWoman
	{ $current=$iv_ruleWoman.current; }
	EOF;

// Rule Woman
ruleWoman returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Woman'
		{
			newLeafNode(otherlv_0, grammarAccess.getWomanAccess().getWomanKeyword_0());
		}
		(
			(
				lv_name_1_0=RULE_STRING
				{
					newLeafNode(lv_name_1_0, grammarAccess.getWomanAccess().getNameSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getWomanRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
		(
			otherlv_2='parents:'
			{
				newLeafNode(otherlv_2, grammarAccess.getWomanAccess().getParentsKeyword_2_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWomanRule());
						}
					}
					otherlv_3=RULE_ID
					{
						newLeafNode(otherlv_3, grammarAccess.getWomanAccess().getParentsPersonCrossReference_2_1_0());
					}
				)
			)+
		)?
		(
			otherlv_4='children:'
			{
				newLeafNode(otherlv_4, grammarAccess.getWomanAccess().getChildrenKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getWomanRule());
						}
					}
					otherlv_5=RULE_ID
					{
						newLeafNode(otherlv_5, grammarAccess.getWomanAccess().getChildrenPersonCrossReference_3_1_0());
					}
				)
			)+
		)?
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
