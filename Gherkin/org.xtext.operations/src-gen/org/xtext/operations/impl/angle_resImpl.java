/**
 * generated by Xtext 2.26.0
 */
package org.xtext.operations.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.operations.OperationsPackage;
import org.xtext.operations.angle_res;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>angle res</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.operations.impl.angle_resImpl#getANGLE_RES <em>ANGLE RES</em>}</li>
 * </ul>
 *
 * @generated
 */
public class angle_resImpl extends MinimalEObjectImpl.Container implements angle_res
{
  /**
   * The default value of the '{@link #getANGLE_RES() <em>ANGLE RES</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getANGLE_RES()
   * @generated
   * @ordered
   */
  protected static final int ANGLE_RES_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getANGLE_RES() <em>ANGLE RES</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getANGLE_RES()
   * @generated
   * @ordered
   */
  protected int anglE_RES = ANGLE_RES_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected angle_resImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OperationsPackage.Literals.ANGLE_RES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getANGLE_RES()
  {
    return anglE_RES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setANGLE_RES(int newANGLE_RES)
  {
    int oldANGLE_RES = anglE_RES;
    anglE_RES = newANGLE_RES;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.ANGLE_RES__ANGLE_RES, oldANGLE_RES, anglE_RES));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OperationsPackage.ANGLE_RES__ANGLE_RES:
        return getANGLE_RES();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OperationsPackage.ANGLE_RES__ANGLE_RES:
        setANGLE_RES((Integer)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OperationsPackage.ANGLE_RES__ANGLE_RES:
        setANGLE_RES(ANGLE_RES_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OperationsPackage.ANGLE_RES__ANGLE_RES:
        return anglE_RES != ANGLE_RES_EDEFAULT;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (ANGLE_RES: ");
    result.append(anglE_RES);
    result.append(')');
    return result.toString();
  }

} //angle_resImpl
