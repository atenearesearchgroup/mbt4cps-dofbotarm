/**
 * generated by Xtext 2.26.0
 */
package org.xtext.operations.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.xtext.operations.OperationsPackage;
import org.xtext.operations.angle;
import org.xtext.operations.angle_res;
import org.xtext.operations.isAtSingleOperation;
import org.xtext.operations.servo;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>is At Single Operation</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getSERVO <em>SERVO</em>}</li>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getSEP1 <em>SEP1</em>}</li>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getANGLE <em>ANGLE</em>}</li>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getSEP2 <em>SEP2</em>}</li>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getANGLE_RES <em>ANGLE RES</em>}</li>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getEND <em>END</em>}</li>
 *   <li>{@link org.xtext.operations.impl.isAtSingleOperationImpl#getVALUE <em>VALUE</em>}</li>
 * </ul>
 *
 * @generated
 */
public class isAtSingleOperationImpl extends ConditionsImpl implements isAtSingleOperation
{
  /**
   * The cached value of the '{@link #getSERVO() <em>SERVO</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSERVO()
   * @generated
   * @ordered
   */
  protected servo servo;

  /**
   * The default value of the '{@link #getSEP1() <em>SEP1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSEP1()
   * @generated
   * @ordered
   */
  protected static final String SEP1_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSEP1() <em>SEP1</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSEP1()
   * @generated
   * @ordered
   */
  protected String sep1 = SEP1_EDEFAULT;

  /**
   * The cached value of the '{@link #getANGLE() <em>ANGLE</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getANGLE()
   * @generated
   * @ordered
   */
  protected angle angle;

  /**
   * The default value of the '{@link #getSEP2() <em>SEP2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSEP2()
   * @generated
   * @ordered
   */
  protected static final String SEP2_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getSEP2() <em>SEP2</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getSEP2()
   * @generated
   * @ordered
   */
  protected String sep2 = SEP2_EDEFAULT;

  /**
   * The cached value of the '{@link #getANGLE_RES() <em>ANGLE RES</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getANGLE_RES()
   * @generated
   * @ordered
   */
  protected angle_res anglE_RES;

  /**
   * The default value of the '{@link #getEND() <em>END</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEND()
   * @generated
   * @ordered
   */
  protected static final String END_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEND() <em>END</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEND()
   * @generated
   * @ordered
   */
  protected String end = END_EDEFAULT;

  /**
   * The default value of the '{@link #getVALUE() <em>VALUE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVALUE()
   * @generated
   * @ordered
   */
  protected static final String VALUE_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getVALUE() <em>VALUE</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVALUE()
   * @generated
   * @ordered
   */
  protected String value = VALUE_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected isAtSingleOperationImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return OperationsPackage.Literals.IS_AT_SINGLE_OPERATION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public servo getSERVO()
  {
    return servo;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetSERVO(servo newSERVO, NotificationChain msgs)
  {
    servo oldSERVO = servo;
    servo = newSERVO;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO, oldSERVO, newSERVO);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSERVO(servo newSERVO)
  {
    if (newSERVO != servo)
    {
      NotificationChain msgs = null;
      if (servo != null)
        msgs = ((InternalEObject)servo).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO, null, msgs);
      if (newSERVO != null)
        msgs = ((InternalEObject)newSERVO).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO, null, msgs);
      msgs = basicSetSERVO(newSERVO, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO, newSERVO, newSERVO));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSEP1()
  {
    return sep1;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSEP1(String newSEP1)
  {
    String oldSEP1 = sep1;
    sep1 = newSEP1;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__SEP1, oldSEP1, sep1));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public angle getANGLE()
  {
    return angle;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetANGLE(angle newANGLE, NotificationChain msgs)
  {
    angle oldANGLE = angle;
    angle = newANGLE;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE, oldANGLE, newANGLE);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setANGLE(angle newANGLE)
  {
    if (newANGLE != angle)
    {
      NotificationChain msgs = null;
      if (angle != null)
        msgs = ((InternalEObject)angle).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE, null, msgs);
      if (newANGLE != null)
        msgs = ((InternalEObject)newANGLE).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE, null, msgs);
      msgs = basicSetANGLE(newANGLE, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE, newANGLE, newANGLE));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getSEP2()
  {
    return sep2;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setSEP2(String newSEP2)
  {
    String oldSEP2 = sep2;
    sep2 = newSEP2;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__SEP2, oldSEP2, sep2));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public angle_res getANGLE_RES()
  {
    return anglE_RES;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetANGLE_RES(angle_res newANGLE_RES, NotificationChain msgs)
  {
    angle_res oldANGLE_RES = anglE_RES;
    anglE_RES = newANGLE_RES;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES, oldANGLE_RES, newANGLE_RES);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setANGLE_RES(angle_res newANGLE_RES)
  {
    if (newANGLE_RES != anglE_RES)
    {
      NotificationChain msgs = null;
      if (anglE_RES != null)
        msgs = ((InternalEObject)anglE_RES).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES, null, msgs);
      if (newANGLE_RES != null)
        msgs = ((InternalEObject)newANGLE_RES).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES, null, msgs);
      msgs = basicSetANGLE_RES(newANGLE_RES, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES, newANGLE_RES, newANGLE_RES));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEND()
  {
    return end;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEND(String newEND)
  {
    String oldEND = end;
    end = newEND;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__END, oldEND, end));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getVALUE()
  {
    return value;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVALUE(String newVALUE)
  {
    String oldVALUE = value;
    value = newVALUE;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, OperationsPackage.IS_AT_SINGLE_OPERATION__VALUE, oldVALUE, value));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO:
        return basicSetSERVO(null, msgs);
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE:
        return basicSetANGLE(null, msgs);
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES:
        return basicSetANGLE_RES(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO:
        return getSERVO();
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP1:
        return getSEP1();
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE:
        return getANGLE();
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP2:
        return getSEP2();
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES:
        return getANGLE_RES();
      case OperationsPackage.IS_AT_SINGLE_OPERATION__END:
        return getEND();
      case OperationsPackage.IS_AT_SINGLE_OPERATION__VALUE:
        return getVALUE();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO:
        setSERVO((servo)newValue);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP1:
        setSEP1((String)newValue);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE:
        setANGLE((angle)newValue);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP2:
        setSEP2((String)newValue);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES:
        setANGLE_RES((angle_res)newValue);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__END:
        setEND((String)newValue);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__VALUE:
        setVALUE((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO:
        setSERVO((servo)null);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP1:
        setSEP1(SEP1_EDEFAULT);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE:
        setANGLE((angle)null);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP2:
        setSEP2(SEP2_EDEFAULT);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES:
        setANGLE_RES((angle_res)null);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__END:
        setEND(END_EDEFAULT);
        return;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__VALUE:
        setVALUE(VALUE_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SERVO:
        return servo != null;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP1:
        return SEP1_EDEFAULT == null ? sep1 != null : !SEP1_EDEFAULT.equals(sep1);
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE:
        return angle != null;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__SEP2:
        return SEP2_EDEFAULT == null ? sep2 != null : !SEP2_EDEFAULT.equals(sep2);
      case OperationsPackage.IS_AT_SINGLE_OPERATION__ANGLE_RES:
        return anglE_RES != null;
      case OperationsPackage.IS_AT_SINGLE_OPERATION__END:
        return END_EDEFAULT == null ? end != null : !END_EDEFAULT.equals(end);
      case OperationsPackage.IS_AT_SINGLE_OPERATION__VALUE:
        return VALUE_EDEFAULT == null ? value != null : !VALUE_EDEFAULT.equals(value);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (SEP1: ");
    result.append(sep1);
    result.append(", SEP2: ");
    result.append(sep2);
    result.append(", END: ");
    result.append(end);
    result.append(", VALUE: ");
    result.append(value);
    result.append(')');
    return result.toString();
  }

} //isAtSingleOperationImpl
