/**
 * generated by Xtext 2.26.0
 */
package org.xtext.operations.util;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.EPackage;

import org.eclipse.emf.ecore.util.Switch;

import org.xtext.operations.*;

/**
 * <!-- begin-user-doc -->
 * The <b>Switch</b> for the model's inheritance hierarchy.
 * It supports the call {@link #doSwitch(EObject) doSwitch(object)}
 * to invoke the <code>caseXXX</code> method for each class of the model,
 * starting with the actual class of the object
 * and proceeding up the inheritance hierarchy
 * until a non-null result is returned,
 * which is the result of the switch.
 * <!-- end-user-doc -->
 * @see org.xtext.operations.OperationsPackage
 * @generated
 */
public class OperationsSwitch<T> extends Switch<T>
{
  /**
   * The cached model package
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected static OperationsPackage modelPackage;

  /**
   * Creates an instance of the switch.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OperationsSwitch()
  {
    if (modelPackage == null)
    {
      modelPackage = OperationsPackage.eINSTANCE;
    }
  }

  /**
   * Checks whether this is a switch for the given package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param ePackage the package in question.
   * @return whether this is a switch for the given package.
   * @generated
   */
  @Override
  protected boolean isSwitchFor(EPackage ePackage)
  {
    return ePackage == modelPackage;
  }

  /**
   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the first non-null result returned by a <code>caseXXX</code> call.
   * @generated
   */
  @Override
  protected T doSwitch(int classifierID, EObject theEObject)
  {
    switch (classifierID)
    {
      case OperationsPackage.INITIAL:
      {
        Initial initial = (Initial)theEObject;
        T result = caseInitial(initial);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.COMMAND:
      {
        Command command = (Command)theEObject;
        T result = caseCommand(command);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.LIGHT_RGB_OPERATION:
      {
        lightRGBOperation lightRGBOperation = (lightRGBOperation)theEObject;
        T result = caselightRGBOperation(lightRGBOperation);
        if (result == null) result = caseCommand(lightRGBOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.BUZZER_OFF_OPERATION:
      {
        buzzerOffOperation buzzerOffOperation = (buzzerOffOperation)theEObject;
        T result = casebuzzerOffOperation(buzzerOffOperation);
        if (result == null) result = caseCommand(buzzerOffOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.BUZZER_ON_OPERATION:
      {
        buzzerOnOperation buzzerOnOperation = (buzzerOnOperation)theEObject;
        T result = casebuzzerOnOperation(buzzerOnOperation);
        if (result == null) result = caseCommand(buzzerOnOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.CALIBRATION_OPERATION:
      {
        calibrationOperation calibrationOperation = (calibrationOperation)theEObject;
        T result = casecalibrationOperation(calibrationOperation);
        if (result == null) result = caseCommand(calibrationOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.CAMERA_COLOR_OPERATION:
      {
        cameraColorOperation cameraColorOperation = (cameraColorOperation)theEObject;
        T result = casecameraColorOperation(cameraColorOperation);
        if (result == null) result = caseCommand(cameraColorOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.READ_ALL_SERVOS_OPERATION:
      {
        readAllServosOperation readAllServosOperation = (readAllServosOperation)theEObject;
        T result = casereadAllServosOperation(readAllServosOperation);
        if (result == null) result = caseCommand(readAllServosOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.READ_SERVO_OPERATION:
      {
        readServoOperation readServoOperation = (readServoOperation)theEObject;
        T result = casereadServoOperation(readServoOperation);
        if (result == null) result = caseCommand(readServoOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.ROTATE_SERVO_OPERATION:
      {
        rotateServoOperation rotateServoOperation = (rotateServoOperation)theEObject;
        T result = caserotateServoOperation(rotateServoOperation);
        if (result == null) result = caseCommand(rotateServoOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.ROTATE_ALL_SERVOS_OPERATION:
      {
        rotateAllServosOperation rotateAllServosOperation = (rotateAllServosOperation)theEObject;
        T result = caserotateAllServosOperation(rotateAllServosOperation);
        if (result == null) result = caseCommand(rotateAllServosOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.RESULT:
      {
        Result result = (Result)theEObject;
        T theResult = caseResult(result);
        if (theResult == null) theResult = defaultCase(theEObject);
        return theResult;
      }
      case OperationsPackage.CONDITIONS:
      {
        Conditions conditions = (Conditions)theEObject;
        T result = caseConditions(conditions);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.SOLUTION:
      {
        Solution solution = (Solution)theEObject;
        T result = caseSolution(solution);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.IS_AT_SINGLE_OPERATION:
      {
        isAtSingleOperation isAtSingleOperation = (isAtSingleOperation)theEObject;
        T result = caseisAtSingleOperation(isAtSingleOperation);
        if (result == null) result = caseSolution(isAtSingleOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.IS_AT_OPERATION:
      {
        isAtOperation isAtOperation = (isAtOperation)theEObject;
        T result = caseisAtOperation(isAtOperation);
        if (result == null) result = caseSolution(isAtOperation);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.ANGLE_RES:
      {
        Angle_res angle_res = (Angle_res)theEObject;
        T result = caseAngle_res(angle_res);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.ANGLE:
      {
        Angle angle = (Angle)theEObject;
        T result = caseAngle(angle);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.TIME:
      {
        Time time = (Time)theEObject;
        T result = caseTime(time);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.SERVO:
      {
        Servo servo = (Servo)theEObject;
        T result = caseServo(servo);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.VMAX:
      {
        V_max v_max = (V_max)theEObject;
        T result = caseV_max(v_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.SMAX:
      {
        S_max s_max = (S_max)theEObject;
        T result = caseS_max(s_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.HMAX:
      {
        H_max h_max = (H_max)theEObject;
        T result = caseH_max(h_max);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.VMIN:
      {
        V_min v_min = (V_min)theEObject;
        T result = caseV_min(v_min);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.SMIN:
      {
        S_min s_min = (S_min)theEObject;
        T result = caseS_min(s_min);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.HMIN:
      {
        H_min h_min = (H_min)theEObject;
        T result = caseH_min(h_min);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.COLOR:
      {
        Color color = (Color)theEObject;
        T result = caseColor(color);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.B:
      {
        B b = (B)theEObject;
        T result = caseB(b);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.G:
      {
        G g = (G)theEObject;
        T result = caseG(g);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      case OperationsPackage.R:
      {
        R r = (R)theEObject;
        T result = caseR(r);
        if (result == null) result = defaultCase(theEObject);
        return result;
      }
      default: return defaultCase(theEObject);
    }
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Initial</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Initial</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseInitial(Initial object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Command</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Command</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseCommand(Command object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>light RGB Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>light RGB Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caselightRGBOperation(lightRGBOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>buzzer Off Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>buzzer Off Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casebuzzerOffOperation(buzzerOffOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>buzzer On Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>buzzer On Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casebuzzerOnOperation(buzzerOnOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>calibration Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>calibration Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecalibrationOperation(calibrationOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>camera Color Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>camera Color Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casecameraColorOperation(cameraColorOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>read All Servos Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>read All Servos Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casereadAllServosOperation(readAllServosOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>read Servo Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>read Servo Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T casereadServoOperation(readServoOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>rotate Servo Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>rotate Servo Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caserotateServoOperation(rotateServoOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>rotate All Servos Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>rotate All Servos Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caserotateAllServosOperation(rotateAllServosOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Result</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Result</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseResult(Result object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Conditions</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Conditions</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseConditions(Conditions object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Solution</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Solution</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseSolution(Solution object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>is At Single Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>is At Single Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseisAtSingleOperation(isAtSingleOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>is At Operation</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>is At Operation</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseisAtOperation(isAtOperation object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Angle res</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Angle res</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAngle_res(Angle_res object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Angle</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Angle</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseAngle(Angle object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Time</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Time</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseTime(Time object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Servo</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Servo</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseServo(Servo object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vmax</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vmax</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseV_max(V_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Smax</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Smax</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseS_max(S_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hmax</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hmax</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseH_max(H_max object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Vmin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Vmin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseV_min(V_min object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Smin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Smin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseS_min(S_min object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Hmin</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Hmin</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseH_min(H_min object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>Color</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>Color</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseColor(Color object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>B</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>B</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseB(B object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>G</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>G</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseG(G object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>R</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>R</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject) doSwitch(EObject)
   * @generated
   */
  public T caseR(R object)
  {
    return null;
  }

  /**
   * Returns the result of interpreting the object as an instance of '<em>EObject</em>'.
   * <!-- begin-user-doc -->
   * This implementation returns null;
   * returning a non-null result will terminate the switch, but this is the last case anyway.
   * <!-- end-user-doc -->
   * @param object the target of the switch.
   * @return the result of interpreting the object as an instance of '<em>EObject</em>'.
   * @see #doSwitch(org.eclipse.emf.ecore.EObject)
   * @generated
   */
  @Override
  public T defaultCase(EObject object)
  {
    return null;
  }

} //OperationsSwitch
