/*
 * generated by Xtext 2.26.0
 */
grammar InternalOperations;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package org.xtext.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.services.OperationsGrammarAccess;

}

@parser::members {

 	private OperationsGrammarAccess grammarAccess;

    public InternalOperationsParser(TokenStream input, OperationsGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "Initial";
   	}

   	@Override
   	protected OperationsGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleInitial
entryRuleInitial returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitialRule()); }
	iv_ruleInitial=ruleInitial
	{ $current=$iv_ruleInitial.current; }
	EOF;

// Rule Initial
ruleInitial returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='posInicialOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getInitialAccess().getNamePosInicialOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitialRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "posInicialOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getInitialAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getInitialAccess().getTimeTimeParserRuleCall_2_0());
				}
				lv_time_2_0=ruleTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getInitialRule());
					}
					add(
						$current,
						"time",
						lv_time_2_0,
						"org.xtext.Operations.Time");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getInitialAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulelightRGBOperation
entryRulelightRGBOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getLightRGBOperationRule()); }
	iv_rulelightRGBOperation=rulelightRGBOperation
	{ $current=$iv_rulelightRGBOperation.current; }
	EOF;

// Rule lightRGBOperation
rulelightRGBOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='lightRGBOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getLightRGBOperationAccess().getNameLightRGBOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getLightRGBOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "lightRGBOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getLightRGBOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLightRGBOperationAccess().getRRParserRuleCall_2_0());
				}
				lv_r_2_0=ruleR
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLightRGBOperationRule());
					}
					add(
						$current,
						"r",
						lv_r_2_0,
						"org.xtext.Operations.R");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getLightRGBOperationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLightRGBOperationAccess().getGGParserRuleCall_4_0());
				}
				lv_g_4_0=ruleG
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLightRGBOperationRule());
					}
					add(
						$current,
						"g",
						lv_g_4_0,
						"org.xtext.Operations.G");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getLightRGBOperationAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getLightRGBOperationAccess().getBBParserRuleCall_6_0());
				}
				lv_b_6_0=ruleB
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getLightRGBOperationRule());
					}
					add(
						$current,
						"b",
						lv_b_6_0,
						"org.xtext.Operations.B");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getLightRGBOperationAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRulebuzzerOffOperation
entryRulebuzzerOffOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuzzerOffOperationRule()); }
	iv_rulebuzzerOffOperation=rulebuzzerOffOperation
	{ $current=$iv_rulebuzzerOffOperation.current; }
	EOF;

// Rule buzzerOffOperation
rulebuzzerOffOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='buzzerOffOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBuzzerOffOperationAccess().getNameBuzzerOffOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuzzerOffOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "buzzerOffOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBuzzerOffOperationAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getBuzzerOffOperationAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRulebuzzerOnOperation
entryRulebuzzerOnOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBuzzerOnOperationRule()); }
	iv_rulebuzzerOnOperation=rulebuzzerOnOperation
	{ $current=$iv_rulebuzzerOnOperation.current; }
	EOF;

// Rule buzzerOnOperation
rulebuzzerOnOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='buzzerOnOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getBuzzerOnOperationAccess().getNameBuzzerOnOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBuzzerOnOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "buzzerOnOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getBuzzerOnOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getBuzzerOnOperationAccess().getTimeTimeParserRuleCall_2_0());
				}
				lv_time_2_0=ruleTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getBuzzerOnOperationRule());
					}
					add(
						$current,
						"time",
						lv_time_2_0,
						"org.xtext.Operations.Time");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getBuzzerOnOperationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulecalibrationOperation
entryRulecalibrationOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCalibrationOperationRule()); }
	iv_rulecalibrationOperation=rulecalibrationOperation
	{ $current=$iv_rulecalibrationOperation.current; }
	EOF;

// Rule calibrationOperation
rulecalibrationOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='calibrationOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCalibrationOperationAccess().getNameCalibrationOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCalibrationOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "calibrationOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCalibrationOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getColorColorParserRuleCall_2_0());
				}
				lv_color_2_0=ruleColor
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"color",
						lv_color_2_0,
						"org.xtext.Operations.Color");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getCalibrationOperationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getH_minH_minParserRuleCall_4_0());
				}
				lv_h_min_4_0=ruleH_min
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"h_min",
						lv_h_min_4_0,
						"org.xtext.Operations.H_min");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getCalibrationOperationAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getS_minS_minParserRuleCall_6_0());
				}
				lv_s_min_6_0=ruleS_min
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"s_min",
						lv_s_min_6_0,
						"org.xtext.Operations.S_min");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getCalibrationOperationAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getV_minV_minParserRuleCall_8_0());
				}
				lv_v_min_8_0=ruleV_min
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"v_min",
						lv_v_min_8_0,
						"org.xtext.Operations.V_min");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getCalibrationOperationAccess().getCommaKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getH_maxH_maxParserRuleCall_10_0());
				}
				lv_h_max_10_0=ruleH_max
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"h_max",
						lv_h_max_10_0,
						"org.xtext.Operations.H_max");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getCalibrationOperationAccess().getCommaKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getS_maxS_maxParserRuleCall_12_0());
				}
				lv_s_max_12_0=ruleS_max
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"s_max",
						lv_s_max_12_0,
						"org.xtext.Operations.S_max");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getCalibrationOperationAccess().getCommaKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCalibrationOperationAccess().getV_maxV_maxParserRuleCall_14_0());
				}
				lv_v_max_14_0=ruleV_max
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCalibrationOperationRule());
					}
					add(
						$current,
						"v_max",
						lv_v_max_14_0,
						"org.xtext.Operations.V_max");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getCalibrationOperationAccess().getRightParenthesisKeyword_15());
		}
	)
;

// Entry rule entryRulecameraColorOperation
entryRulecameraColorOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getCameraColorOperationRule()); }
	iv_rulecameraColorOperation=rulecameraColorOperation
	{ $current=$iv_rulecameraColorOperation.current; }
	EOF;

// Rule cameraColorOperation
rulecameraColorOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='cameraColorOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getCameraColorOperationAccess().getNameCameraColorOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getCameraColorOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "cameraColorOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getCameraColorOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getCameraColorOperationAccess().getTimeTimeParserRuleCall_2_0());
				}
				lv_time_2_0=ruleTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getCameraColorOperationRule());
					}
					add(
						$current,
						"time",
						lv_time_2_0,
						"org.xtext.Operations.Time");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getCameraColorOperationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulereadAllServosOperation
entryRulereadAllServosOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadAllServosOperationRule()); }
	iv_rulereadAllServosOperation=rulereadAllServosOperation
	{ $current=$iv_rulereadAllServosOperation.current; }
	EOF;

// Rule readAllServosOperation
rulereadAllServosOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='readAllServosOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReadAllServosOperationAccess().getNameReadAllServosOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadAllServosOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "readAllServosOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getReadAllServosOperationAccess().getLeftParenthesisKeyword_1());
		}
		otherlv_2=')'
		{
			newLeafNode(otherlv_2, grammarAccess.getReadAllServosOperationAccess().getRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRulereadServoOperation
entryRulereadServoOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReadServoOperationRule()); }
	iv_rulereadServoOperation=rulereadServoOperation
	{ $current=$iv_rulereadServoOperation.current; }
	EOF;

// Rule readServoOperation
rulereadServoOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='readServoOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getReadServoOperationAccess().getNameReadServoOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getReadServoOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "readServoOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getReadServoOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getReadServoOperationAccess().getServoServoParserRuleCall_2_0());
				}
				lv_servo_2_0=ruleServo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReadServoOperationRule());
					}
					add(
						$current,
						"servo",
						lv_servo_2_0,
						"org.xtext.Operations.Servo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getReadServoOperationAccess().getRightParenthesisKeyword_3());
		}
	)
;

// Entry rule entryRulerotateServoOperation
entryRulerotateServoOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotateServoOperationRule()); }
	iv_rulerotateServoOperation=rulerotateServoOperation
	{ $current=$iv_rulerotateServoOperation.current; }
	EOF;

// Rule rotateServoOperation
rulerotateServoOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='rotateServoOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRotateServoOperationAccess().getNameRotateServoOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRotateServoOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "rotateServoOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRotateServoOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateServoOperationAccess().getServoServoParserRuleCall_2_0());
				}
				lv_servo_2_0=ruleServo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateServoOperationRule());
					}
					add(
						$current,
						"servo",
						lv_servo_2_0,
						"org.xtext.Operations.Servo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRotateServoOperationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateServoOperationAccess().getAngleAngleParserRuleCall_4_0());
				}
				lv_angle_4_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateServoOperationRule());
					}
					add(
						$current,
						"angle",
						lv_angle_4_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getRotateServoOperationAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateServoOperationAccess().getTimeTimeParserRuleCall_6_0());
				}
				lv_time_6_0=ruleTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateServoOperationRule());
					}
					add(
						$current,
						"time",
						lv_time_6_0,
						"org.xtext.Operations.Time");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getRotateServoOperationAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRulerotateAllServosOperation
entryRulerotateAllServosOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRotateAllServosOperationRule()); }
	iv_rulerotateAllServosOperation=rulerotateAllServosOperation
	{ $current=$iv_rulerotateAllServosOperation.current; }
	EOF;

// Rule rotateAllServosOperation
rulerotateAllServosOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='rotateAllServosOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getRotateAllServosOperationAccess().getNameRotateAllServosOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRotateAllServosOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "rotateAllServosOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getRotateAllServosOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getAngle1AngleParserRuleCall_2_0());
				}
				lv_angle1_2_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"angle1",
						lv_angle1_2_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getRotateAllServosOperationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getAngle2AngleParserRuleCall_4_0());
				}
				lv_angle2_4_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"angle2",
						lv_angle2_4_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getRotateAllServosOperationAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getAngle3AngleParserRuleCall_6_0());
				}
				lv_angle3_6_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"angle3",
						lv_angle3_6_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getRotateAllServosOperationAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getAngle4AngleParserRuleCall_8_0());
				}
				lv_angle4_8_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"angle4",
						lv_angle4_8_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getRotateAllServosOperationAccess().getCommaKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getAngle5AngleParserRuleCall_10_0());
				}
				lv_angle5_10_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"angle5",
						lv_angle5_10_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getRotateAllServosOperationAccess().getCommaKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getAngle6AngleParserRuleCall_12_0());
				}
				lv_angle6_12_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"angle6",
						lv_angle6_12_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getRotateAllServosOperationAccess().getCommaKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getRotateAllServosOperationAccess().getTimeTimeParserRuleCall_14_0());
				}
				lv_time_14_0=ruleTime
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRotateAllServosOperationRule());
					}
					add(
						$current,
						"time",
						lv_time_14_0,
						"org.xtext.Operations.Time");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getRotateAllServosOperationAccess().getRightParenthesisKeyword_15());
		}
	)
;

// Entry rule entryRuleisAtSingleOperation
entryRuleisAtSingleOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsAtSingleOperationRule()); }
	iv_ruleisAtSingleOperation=ruleisAtSingleOperation
	{ $current=$iv_ruleisAtSingleOperation.current; }
	EOF;

// Rule isAtSingleOperation
ruleisAtSingleOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='isAtSingleOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIsAtSingleOperationAccess().getNameIsAtSingleOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsAtSingleOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "isAtSingleOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIsAtSingleOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtSingleOperationAccess().getServoServoParserRuleCall_2_0());
				}
				lv_servo_2_0=ruleServo
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtSingleOperationRule());
					}
					add(
						$current,
						"servo",
						lv_servo_2_0,
						"org.xtext.Operations.Servo");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getIsAtSingleOperationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtSingleOperationAccess().getAngleAngleParserRuleCall_4_0());
				}
				lv_angle_4_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtSingleOperationRule());
					}
					add(
						$current,
						"angle",
						lv_angle_4_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getIsAtSingleOperationAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtSingleOperationAccess().getAngle_resAngle_resParserRuleCall_6_0());
				}
				lv_angle_res_6_0=ruleAngle_res
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtSingleOperationRule());
					}
					add(
						$current,
						"angle_res",
						lv_angle_res_6_0,
						"org.xtext.Operations.Angle_res");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=')'
		{
			newLeafNode(otherlv_7, grammarAccess.getIsAtSingleOperationAccess().getRightParenthesisKeyword_7());
		}
	)
;

// Entry rule entryRuleisAtOperation
entryRuleisAtOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsAtOperationRule()); }
	iv_ruleisAtOperation=ruleisAtOperation
	{ $current=$iv_ruleisAtOperation.current; }
	EOF;

// Rule isAtOperation
ruleisAtOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0='isAtOperation'
				{
					newLeafNode(lv_name_0_0, grammarAccess.getIsAtOperationAccess().getNameIsAtOperationKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsAtOperationRule());
					}
					setWithLastConsumed($current, "name", lv_name_0_0, "isAtOperation");
				}
			)
		)
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getIsAtOperationAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle1AngleParserRuleCall_2_0());
				}
				lv_angle1_2_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle1",
						lv_angle1_2_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=','
		{
			newLeafNode(otherlv_3, grammarAccess.getIsAtOperationAccess().getCommaKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle2AngleParserRuleCall_4_0());
				}
				lv_angle2_4_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle2",
						lv_angle2_4_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_5=','
		{
			newLeafNode(otherlv_5, grammarAccess.getIsAtOperationAccess().getCommaKeyword_5());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle3AngleParserRuleCall_6_0());
				}
				lv_angle3_6_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle3",
						lv_angle3_6_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_7=','
		{
			newLeafNode(otherlv_7, grammarAccess.getIsAtOperationAccess().getCommaKeyword_7());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle4AngleParserRuleCall_8_0());
				}
				lv_angle4_8_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle4",
						lv_angle4_8_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_9=','
		{
			newLeafNode(otherlv_9, grammarAccess.getIsAtOperationAccess().getCommaKeyword_9());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle5AngleParserRuleCall_10_0());
				}
				lv_angle5_10_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle5",
						lv_angle5_10_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11=','
		{
			newLeafNode(otherlv_11, grammarAccess.getIsAtOperationAccess().getCommaKeyword_11());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle6AngleParserRuleCall_12_0());
				}
				lv_angle6_12_0=ruleAngle
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle6",
						lv_angle6_12_0,
						"org.xtext.Operations.Angle");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_13=','
		{
			newLeafNode(otherlv_13, grammarAccess.getIsAtOperationAccess().getCommaKeyword_13());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsAtOperationAccess().getAngle_resAngle_resParserRuleCall_14_0());
				}
				lv_angle_res_14_0=ruleAngle_res
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsAtOperationRule());
					}
					add(
						$current,
						"angle_res",
						lv_angle_res_14_0,
						"org.xtext.Operations.Angle_res");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_15=')'
		{
			newLeafNode(otherlv_15, grammarAccess.getIsAtOperationAccess().getRightParenthesisKeyword_15());
		}
	)
;

// Entry rule entryRuleAngle_res
entryRuleAngle_res returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAngle_resRule()); }
	iv_ruleAngle_res=ruleAngle_res
	{ $current=$iv_ruleAngle_res.current; }
	EOF;

// Rule Angle_res
ruleAngle_res returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_angle_res_0_0=RULE_INT
			{
				newLeafNode(lv_angle_res_0_0, grammarAccess.getAngle_resAccess().getAngle_resINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAngle_resRule());
				}
				setWithLastConsumed(
					$current,
					"angle_res",
					lv_angle_res_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleAngle
entryRuleAngle returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAngleRule()); }
	iv_ruleAngle=ruleAngle
	{ $current=$iv_ruleAngle.current; }
	EOF;

// Rule Angle
ruleAngle returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_angle_0_0=RULE_INT
			{
				newLeafNode(lv_angle_0_0, grammarAccess.getAngleAccess().getAngleINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getAngleRule());
				}
				setWithLastConsumed(
					$current,
					"angle",
					lv_angle_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleTime
entryRuleTime returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTimeRule()); }
	iv_ruleTime=ruleTime
	{ $current=$iv_ruleTime.current; }
	EOF;

// Rule Time
ruleTime returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_time_0_0=RULE_INT
			{
				newLeafNode(lv_time_0_0, grammarAccess.getTimeAccess().getTimeINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getTimeRule());
				}
				setWithLastConsumed(
					$current,
					"time",
					lv_time_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleServo
entryRuleServo returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getServoRule()); }
	iv_ruleServo=ruleServo
	{ $current=$iv_ruleServo.current; }
	EOF;

// Rule Servo
ruleServo returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_servo_0_0=RULE_INT
			{
				newLeafNode(lv_servo_0_0, grammarAccess.getServoAccess().getServoINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getServoRule());
				}
				setWithLastConsumed(
					$current,
					"servo",
					lv_servo_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleV_max
entryRuleV_max returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getV_maxRule()); }
	iv_ruleV_max=ruleV_max
	{ $current=$iv_ruleV_max.current; }
	EOF;

// Rule V_max
ruleV_max returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_v_max_0_0=RULE_INT
			{
				newLeafNode(lv_v_max_0_0, grammarAccess.getV_maxAccess().getV_maxINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getV_maxRule());
				}
				setWithLastConsumed(
					$current,
					"v_max",
					lv_v_max_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleS_max
entryRuleS_max returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_maxRule()); }
	iv_ruleS_max=ruleS_max
	{ $current=$iv_ruleS_max.current; }
	EOF;

// Rule S_max
ruleS_max returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_s_max_0_0=RULE_INT
			{
				newLeafNode(lv_s_max_0_0, grammarAccess.getS_maxAccess().getS_maxINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getS_maxRule());
				}
				setWithLastConsumed(
					$current,
					"s_max",
					lv_s_max_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleH_max
entryRuleH_max returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getH_maxRule()); }
	iv_ruleH_max=ruleH_max
	{ $current=$iv_ruleH_max.current; }
	EOF;

// Rule H_max
ruleH_max returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_h_max_0_0=RULE_INT
			{
				newLeafNode(lv_h_max_0_0, grammarAccess.getH_maxAccess().getH_maxINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getH_maxRule());
				}
				setWithLastConsumed(
					$current,
					"h_max",
					lv_h_max_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleV_min
entryRuleV_min returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getV_minRule()); }
	iv_ruleV_min=ruleV_min
	{ $current=$iv_ruleV_min.current; }
	EOF;

// Rule V_min
ruleV_min returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_v_min_0_0=RULE_INT
			{
				newLeafNode(lv_v_min_0_0, grammarAccess.getV_minAccess().getV_minINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getV_minRule());
				}
				setWithLastConsumed(
					$current,
					"v_min",
					lv_v_min_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleS_min
entryRuleS_min returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getS_minRule()); }
	iv_ruleS_min=ruleS_min
	{ $current=$iv_ruleS_min.current; }
	EOF;

// Rule S_min
ruleS_min returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_s_min_0_0=RULE_INT
			{
				newLeafNode(lv_s_min_0_0, grammarAccess.getS_minAccess().getS_minINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getS_minRule());
				}
				setWithLastConsumed(
					$current,
					"s_min",
					lv_s_min_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleH_min
entryRuleH_min returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getH_minRule()); }
	iv_ruleH_min=ruleH_min
	{ $current=$iv_ruleH_min.current; }
	EOF;

// Rule H_min
ruleH_min returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_h_min_0_0=RULE_INT
			{
				newLeafNode(lv_h_min_0_0, grammarAccess.getH_minAccess().getH_minINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getH_minRule());
				}
				setWithLastConsumed(
					$current,
					"h_min",
					lv_h_min_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleColor
entryRuleColor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColorRule()); }
	iv_ruleColor=ruleColor
	{ $current=$iv_ruleColor.current; }
	EOF;

// Rule Color
ruleColor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_color_0_0=RULE_STRING
			{
				newLeafNode(lv_color_0_0, grammarAccess.getColorAccess().getColorSTRINGTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getColorRule());
				}
				setWithLastConsumed(
					$current,
					"color",
					lv_color_0_0,
					"org.eclipse.xtext.common.Terminals.STRING");
			}
		)
	)
;

// Entry rule entryRuleB
entryRuleB returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBRule()); }
	iv_ruleB=ruleB
	{ $current=$iv_ruleB.current; }
	EOF;

// Rule B
ruleB returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_b_0_0=RULE_INT
			{
				newLeafNode(lv_b_0_0, grammarAccess.getBAccess().getBINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getBRule());
				}
				setWithLastConsumed(
					$current,
					"b",
					lv_b_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleG
entryRuleG returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getGRule()); }
	iv_ruleG=ruleG
	{ $current=$iv_ruleG.current; }
	EOF;

// Rule G
ruleG returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_g_0_0=RULE_INT
			{
				newLeafNode(lv_g_0_0, grammarAccess.getGAccess().getGINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getGRule());
				}
				setWithLastConsumed(
					$current,
					"g",
					lv_g_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

// Entry rule entryRuleR
entryRuleR returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRRule()); }
	iv_ruleR=ruleR
	{ $current=$iv_ruleR.current; }
	EOF;

// Rule R
ruleR returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			lv_r_0_0=RULE_INT
			{
				newLeafNode(lv_r_0_0, grammarAccess.getRAccess().getRINTTerminalRuleCall_0());
			}
			{
				if ($current==null) {
					$current = createModelElement(grammarAccess.getRRule());
				}
				setWithLastConsumed(
					$current,
					"r",
					lv_r_0_0,
					"org.eclipse.xtext.common.Terminals.INT");
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
