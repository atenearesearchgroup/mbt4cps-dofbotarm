/*
 * generated by Xtext 2.26.0
 */
grammar InternalDofbotDSL;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.services.DofbotDSLGrammarAccess;

}
@parser::members {
	private DofbotDSLGrammarAccess grammarAccess;

	public void setGrammarAccess(DofbotDSLGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleArm
entryRuleArm
:
{ before(grammarAccess.getArmRule()); }
	 ruleArm
{ after(grammarAccess.getArmRule()); } 
	 EOF 
;

// Rule Arm
ruleArm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArmAccess().getGroup()); }
		(rule__Arm__Group__0)
		{ after(grammarAccess.getArmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateMultiple
entryRuleRotateMultiple
:
{ before(grammarAccess.getRotateMultipleRule()); }
	 ruleRotateMultiple
{ after(grammarAccess.getRotateMultipleRule()); } 
	 EOF 
;

// Rule RotateMultiple
ruleRotateMultiple 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateMultipleAccess().getGroup()); }
		(rule__RotateMultiple__Group__0)
		{ after(grammarAccess.getRotateMultipleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRotateSingle
entryRuleRotateSingle
:
{ before(grammarAccess.getRotateSingleRule()); }
	 ruleRotateSingle
{ after(grammarAccess.getRotateSingleRule()); } 
	 EOF 
;

// Rule RotateSingle
ruleRotateSingle 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRotateSingleAccess().getGroup()); }
		(rule__RotateSingle__Group__0)
		{ after(grammarAccess.getRotateSingleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleServos
entryRuleServos
:
{ before(grammarAccess.getServosRule()); }
	 ruleServos
{ after(grammarAccess.getServosRule()); } 
	 EOF 
;

// Rule Servos
ruleServos 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getServosAccess().getGroup()); }
		(rule__Servos__Group__0)
		{ after(grammarAccess.getServosAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAngles
entryRuleAngles
:
{ before(grammarAccess.getAnglesRule()); }
	 ruleAngles
{ after(grammarAccess.getAnglesRule()); } 
	 EOF 
;

// Rule Angles
ruleAngles 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAnglesAccess().getGroup()); }
		(rule__Angles__Group__0)
		{ after(grammarAccess.getAnglesAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group__0__Impl
	rule__Arm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getNameKeyword_0()); }
	'Name'
	{ after(grammarAccess.getArmAccess().getNameKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group__1__Impl
	rule__Arm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getNameAssignment_1()); }
	(rule__Arm__NameAssignment_1)
	{ after(grammarAccess.getArmAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group__2__Impl
	rule__Arm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getArmAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group__3__Impl
	rule__Arm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getGroup_3()); }
	(rule__Arm__Group_3__0)?
	{ after(grammarAccess.getArmAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group__4__Impl
	rule__Arm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getGroup_4()); }
	(rule__Arm__Group_4__0)?
	{ after(grammarAccess.getArmAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getRightCurlyBracketKeyword_5()); }
	'}'
	{ after(grammarAccess.getArmAccess().getRightCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group_3__0__Impl
	rule__Arm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getRotateMultipleKeyword_3_0()); }
	'rotateMultiple'
	{ after(grammarAccess.getArmAccess().getRotateMultipleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArmAccess().getRotateMultipleAssignment_3_1()); }
		(rule__Arm__RotateMultipleAssignment_3_1)
		{ after(grammarAccess.getArmAccess().getRotateMultipleAssignment_3_1()); }
	)
	(
		{ before(grammarAccess.getArmAccess().getRotateMultipleAssignment_3_1()); }
		(rule__Arm__RotateMultipleAssignment_3_1)*
		{ after(grammarAccess.getArmAccess().getRotateMultipleAssignment_3_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arm__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group_4__0__Impl
	rule__Arm__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getArmAccess().getRotateSingleKeyword_4_0()); }
	'rotateSingle'
	{ after(grammarAccess.getArmAccess().getRotateSingleKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Arm__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getArmAccess().getRotateSingleAssignment_4_1()); }
		(rule__Arm__RotateSingleAssignment_4_1)
		{ after(grammarAccess.getArmAccess().getRotateSingleAssignment_4_1()); }
	)
	(
		{ before(grammarAccess.getArmAccess().getRotateSingleAssignment_4_1()); }
		(rule__Arm__RotateSingleAssignment_4_1)*
		{ after(grammarAccess.getArmAccess().getRotateSingleAssignment_4_1()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateMultiple__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__0__Impl
	rule__RotateMultiple__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMultipleAccess().getRotateMultipleKeyword_0()); }
	'RotateMultiple'
	{ after(grammarAccess.getRotateMultipleAccess().getRotateMultipleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__1__Impl
	rule__RotateMultiple__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMultipleAccess().getNameAssignment_1()); }
	(rule__RotateMultiple__NameAssignment_1)
	{ after(grammarAccess.getRotateMultipleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__2__Impl
	rule__RotateMultiple__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMultipleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRotateMultipleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__3__Impl
	rule__RotateMultiple__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	(
		{ before(grammarAccess.getRotateMultipleAccess().getAngleAssignment_3()); }
		(rule__RotateMultiple__AngleAssignment_3)
		{ after(grammarAccess.getRotateMultipleAccess().getAngleAssignment_3()); }
	)
	(
		{ before(grammarAccess.getRotateMultipleAccess().getAngleAssignment_3()); }
		(rule__RotateMultiple__AngleAssignment_3)*
		{ after(grammarAccess.getRotateMultipleAccess().getAngleAssignment_3()); }
	)
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__4__Impl
	rule__RotateMultiple__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMultipleAccess().getTimeKeyword_4()); }
	'Time'
	{ after(grammarAccess.getRotateMultipleAccess().getTimeKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__5__Impl
	rule__RotateMultiple__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMultipleAccess().getTimeAssignment_5()); }
	(rule__RotateMultiple__TimeAssignment_5)
	{ after(grammarAccess.getRotateMultipleAccess().getTimeAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateMultiple__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateMultipleAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getRotateMultipleAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__RotateSingle__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__0__Impl
	rule__RotateSingle__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getRotateSingleKeyword_0()); }
	'RotateSingle'
	{ after(grammarAccess.getRotateSingleAccess().getRotateSingleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__1__Impl
	rule__RotateSingle__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getNameAssignment_1()); }
	(rule__RotateSingle__NameAssignment_1)
	{ after(grammarAccess.getRotateSingleAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__2__Impl
	rule__RotateSingle__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getRotateSingleAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__3__Impl
	rule__RotateSingle__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getServoAssignment_3()); }
	(rule__RotateSingle__ServoAssignment_3)
	{ after(grammarAccess.getRotateSingleAccess().getServoAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__4__Impl
	rule__RotateSingle__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getAngleAssignment_4()); }
	(rule__RotateSingle__AngleAssignment_4)
	{ after(grammarAccess.getRotateSingleAccess().getAngleAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__5__Impl
	rule__RotateSingle__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getTimeKeyword_5()); }
	'Time'
	{ after(grammarAccess.getRotateSingleAccess().getTimeKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__6__Impl
	rule__RotateSingle__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getTimeAssignment_6()); }
	(rule__RotateSingle__TimeAssignment_6)
	{ after(grammarAccess.getRotateSingleAccess().getTimeAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__RotateSingle__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRotateSingleAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getRotateSingleAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Servos__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Servos__Group__0__Impl
	rule__Servos__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Servos__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServosAccess().getServoKeyword_0()); }
	'Servo'
	{ after(grammarAccess.getServosAccess().getServoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Servos__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Servos__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Servos__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getServosAccess().getNameAssignment_1()); }
	(rule__Servos__NameAssignment_1)
	{ after(grammarAccess.getServosAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Angles__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Angles__Group__0__Impl
	rule__Angles__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Angles__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnglesAccess().getAngleKeyword_0()); }
	'Angle'
	{ after(grammarAccess.getAnglesAccess().getAngleKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Angles__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Angles__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Angles__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAnglesAccess().getNameAssignment_1()); }
	(rule__Angles__NameAssignment_1)
	{ after(grammarAccess.getAnglesAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Arm__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getArmAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__RotateMultipleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmAccess().getRotateMultipleRotateMultipleParserRuleCall_3_1_0()); }
		ruleRotateMultiple
		{ after(grammarAccess.getArmAccess().getRotateMultipleRotateMultipleParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Arm__RotateSingleAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getArmAccess().getRotateSingleRotateSingleParserRuleCall_4_1_0()); }
		ruleRotateSingle
		{ after(grammarAccess.getArmAccess().getRotateSingleRotateSingleParserRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateMultipleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRotateMultipleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__AngleAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateMultipleAccess().getAngleAnglesParserRuleCall_3_0()); }
		ruleAngles
		{ after(grammarAccess.getRotateMultipleAccess().getAngleAnglesParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateMultiple__TimeAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateMultipleAccess().getTimeINTTerminalRuleCall_5_0()); }
		RULE_INT
		{ after(grammarAccess.getRotateMultipleAccess().getTimeINTTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateSingleAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getRotateSingleAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__ServoAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateSingleAccess().getServoServosParserRuleCall_3_0()); }
		ruleServos
		{ after(grammarAccess.getRotateSingleAccess().getServoServosParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__AngleAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateSingleAccess().getAngleAnglesParserRuleCall_4_0()); }
		ruleAngles
		{ after(grammarAccess.getRotateSingleAccess().getAngleAnglesParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__RotateSingle__TimeAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRotateSingleAccess().getTimeINTTerminalRuleCall_6_0()); }
		RULE_INT
		{ after(grammarAccess.getRotateSingleAccess().getTimeINTTerminalRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Servos__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getServosAccess().getNameINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getServosAccess().getNameINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Angles__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAnglesAccess().getNameINTTerminalRuleCall_1_0()); }
		RULE_INT
		{ after(grammarAccess.getAnglesAccess().getNameINTTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
