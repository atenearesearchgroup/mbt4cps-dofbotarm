/**
 * generated by Xtext 2.26.0
 */
package org.xtext.pruebaOperation;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EEnum;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.xtext.pruebaOperation.PruebaOperationFactory
 * @model kind="package"
 * @generated
 */
public interface PruebaOperationPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "pruebaOperation";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.xtext.org/PruebaOperation";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "pruebaOperation";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PruebaOperationPackage eINSTANCE = org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl.init();

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.InitialImpl <em>Initial</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.InitialImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getInitial()
   * @generated
   */
  int INITIAL = 0;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL__NAME = 0;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL__TIME = 1;

  /**
   * The number of structural features of the '<em>Initial</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int INITIAL_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.CommandImpl <em>Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.CommandImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getCommand()
   * @generated
   */
  int COMMAND = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__NAME = 0;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND__TIME = 1;

  /**
   * The number of structural features of the '<em>Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMMAND_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.rotateServoImpl <em>rotate Servo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.rotateServoImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getrotateServo()
   * @generated
   */
  int ROTATE_SERVO = 2;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_SERVO__NAME = COMMAND__NAME;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_SERVO__TIME = COMMAND__TIME;

  /**
   * The feature id for the '<em><b>Servo</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_SERVO__SERVO = COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Angle</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_SERVO__ANGLE = COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>rotate Servo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_SERVO_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.rotateAllServosImpl <em>rotate All Servos</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.rotateAllServosImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getrotateAllServos()
   * @generated
   */
  int ROTATE_ALL_SERVOS = 3;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__NAME = COMMAND__NAME;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__TIME = COMMAND__TIME;

  /**
   * The feature id for the '<em><b>Angle1</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__ANGLE1 = COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Angle2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__ANGLE2 = COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Angle3</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__ANGLE3 = COMMAND_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Angle4</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__ANGLE4 = COMMAND_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Angle5</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__ANGLE5 = COMMAND_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Angle6</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS__ANGLE6 = COMMAND_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>rotate All Servos</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ROTATE_ALL_SERVOS_FEATURE_COUNT = COMMAND_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.ResultImpl <em>Result</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.ResultImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getResult()
   * @generated
   */
  int RESULT = 4;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT__NAME = 0;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT__TIME = 1;

  /**
   * The number of structural features of the '<em>Result</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RESULT_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.ConditionsImpl <em>Conditions</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.ConditionsImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getConditions()
   * @generated
   */
  int CONDITIONS = 5;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONS__NAME = 0;

  /**
   * The feature id for the '<em><b>Time</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONS__TIME = 1;

  /**
   * The number of structural features of the '<em>Conditions</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONDITIONS_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.SolutionImpl <em>Solution</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.SolutionImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getSolution()
   * @generated
   */
  int SOLUTION = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOLUTION__NAME = 0;

  /**
   * The feature id for the '<em><b>Angle res</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOLUTION__ANGLE_RES = 1;

  /**
   * The number of structural features of the '<em>Solution</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SOLUTION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.isAtSingleImpl <em>is At Single</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.isAtSingleImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getisAtSingle()
   * @generated
   */
  int IS_AT_SINGLE = 7;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT_SINGLE__NAME = SOLUTION__NAME;

  /**
   * The feature id for the '<em><b>Angle res</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT_SINGLE__ANGLE_RES = SOLUTION__ANGLE_RES;

  /**
   * The feature id for the '<em><b>Servo</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT_SINGLE__SERVO = SOLUTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Angle</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT_SINGLE__ANGLE = SOLUTION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>is At Single</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT_SINGLE_FEATURE_COUNT = SOLUTION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.isAtImpl <em>is At</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.isAtImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getisAt()
   * @generated
   */
  int IS_AT = 8;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__NAME = SOLUTION__NAME;

  /**
   * The feature id for the '<em><b>Angle res</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE_RES = SOLUTION__ANGLE_RES;

  /**
   * The feature id for the '<em><b>Angle1</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE1 = SOLUTION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Angle2</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE2 = SOLUTION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Angle3</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE3 = SOLUTION_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Angle4</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE4 = SOLUTION_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Angle5</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE5 = SOLUTION_FEATURE_COUNT + 4;

  /**
   * The feature id for the '<em><b>Angle6</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT__ANGLE6 = SOLUTION_FEATURE_COUNT + 5;

  /**
   * The number of structural features of the '<em>is At</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IS_AT_FEATURE_COUNT = SOLUTION_FEATURE_COUNT + 6;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.Angle_resImpl <em>Angle res</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.Angle_resImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getAngle_res()
   * @generated
   */
  int ANGLE_RES = 9;

  /**
   * The feature id for the '<em><b>Angle res</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANGLE_RES__ANGLE_RES = 0;

  /**
   * The number of structural features of the '<em>Angle res</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANGLE_RES_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.AngleImpl <em>Angle</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.AngleImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getAngle()
   * @generated
   */
  int ANGLE = 10;

  /**
   * The feature id for the '<em><b>Angle</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANGLE__ANGLE = 0;

  /**
   * The number of structural features of the '<em>Angle</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ANGLE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.TimeImpl <em>Time</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.TimeImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getTime()
   * @generated
   */
  int TIME = 11;

  /**
   * The feature id for the '<em><b>Time</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME__TIME = 0;

  /**
   * The number of structural features of the '<em>Time</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int TIME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.impl.ServoImpl <em>Servo</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.impl.ServoImpl
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getServo()
   * @generated
   */
  int SERVO = 12;

  /**
   * The feature id for the '<em><b>Servo</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SERVO__SERVO = 0;

  /**
   * The number of structural features of the '<em>Servo</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SERVO_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.xtext.pruebaOperation.State <em>State</em>}' enum.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.xtext.pruebaOperation.State
   * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getState()
   * @generated
   */
  int STATE = 13;


  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Initial <em>Initial</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Initial</em>'.
   * @see org.xtext.pruebaOperation.Initial
   * @generated
   */
  EClass getInitial();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Initial#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pruebaOperation.Initial#getName()
   * @see #getInitial()
   * @generated
   */
  EAttribute getInitial_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.Initial#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Time</em>'.
   * @see org.xtext.pruebaOperation.Initial#getTime()
   * @see #getInitial()
   * @generated
   */
  EReference getInitial_Time();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Command <em>Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Command</em>'.
   * @see org.xtext.pruebaOperation.Command
   * @generated
   */
  EClass getCommand();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Command#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pruebaOperation.Command#getName()
   * @see #getCommand()
   * @generated
   */
  EAttribute getCommand_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.Command#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Time</em>'.
   * @see org.xtext.pruebaOperation.Command#getTime()
   * @see #getCommand()
   * @generated
   */
  EReference getCommand_Time();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.rotateServo <em>rotate Servo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>rotate Servo</em>'.
   * @see org.xtext.pruebaOperation.rotateServo
   * @generated
   */
  EClass getrotateServo();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateServo#getServo <em>Servo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Servo</em>'.
   * @see org.xtext.pruebaOperation.rotateServo#getServo()
   * @see #getrotateServo()
   * @generated
   */
  EReference getrotateServo_Servo();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateServo#getAngle <em>Angle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle</em>'.
   * @see org.xtext.pruebaOperation.rotateServo#getAngle()
   * @see #getrotateServo()
   * @generated
   */
  EReference getrotateServo_Angle();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.rotateAllServos <em>rotate All Servos</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>rotate All Servos</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos
   * @generated
   */
  EClass getrotateAllServos();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateAllServos#getAngle1 <em>Angle1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle1</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos#getAngle1()
   * @see #getrotateAllServos()
   * @generated
   */
  EReference getrotateAllServos_Angle1();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateAllServos#getAngle2 <em>Angle2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle2</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos#getAngle2()
   * @see #getrotateAllServos()
   * @generated
   */
  EReference getrotateAllServos_Angle2();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateAllServos#getAngle3 <em>Angle3</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle3</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos#getAngle3()
   * @see #getrotateAllServos()
   * @generated
   */
  EReference getrotateAllServos_Angle3();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateAllServos#getAngle4 <em>Angle4</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle4</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos#getAngle4()
   * @see #getrotateAllServos()
   * @generated
   */
  EReference getrotateAllServos_Angle4();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateAllServos#getAngle5 <em>Angle5</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle5</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos#getAngle5()
   * @see #getrotateAllServos()
   * @generated
   */
  EReference getrotateAllServos_Angle5();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.rotateAllServos#getAngle6 <em>Angle6</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle6</em>'.
   * @see org.xtext.pruebaOperation.rotateAllServos#getAngle6()
   * @see #getrotateAllServos()
   * @generated
   */
  EReference getrotateAllServos_Angle6();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Result <em>Result</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Result</em>'.
   * @see org.xtext.pruebaOperation.Result
   * @generated
   */
  EClass getResult();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Result#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pruebaOperation.Result#getName()
   * @see #getResult()
   * @generated
   */
  EAttribute getResult_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.Result#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Time</em>'.
   * @see org.xtext.pruebaOperation.Result#getTime()
   * @see #getResult()
   * @generated
   */
  EReference getResult_Time();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Conditions <em>Conditions</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Conditions</em>'.
   * @see org.xtext.pruebaOperation.Conditions
   * @generated
   */
  EClass getConditions();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Conditions#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pruebaOperation.Conditions#getName()
   * @see #getConditions()
   * @generated
   */
  EAttribute getConditions_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.Conditions#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Time</em>'.
   * @see org.xtext.pruebaOperation.Conditions#getTime()
   * @see #getConditions()
   * @generated
   */
  EReference getConditions_Time();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Solution <em>Solution</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Solution</em>'.
   * @see org.xtext.pruebaOperation.Solution
   * @generated
   */
  EClass getSolution();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Solution#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.xtext.pruebaOperation.Solution#getName()
   * @see #getSolution()
   * @generated
   */
  EAttribute getSolution_Name();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.Solution#getAngle_res <em>Angle res</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle res</em>'.
   * @see org.xtext.pruebaOperation.Solution#getAngle_res()
   * @see #getSolution()
   * @generated
   */
  EReference getSolution_Angle_res();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.isAtSingle <em>is At Single</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>is At Single</em>'.
   * @see org.xtext.pruebaOperation.isAtSingle
   * @generated
   */
  EClass getisAtSingle();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAtSingle#getServo <em>Servo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Servo</em>'.
   * @see org.xtext.pruebaOperation.isAtSingle#getServo()
   * @see #getisAtSingle()
   * @generated
   */
  EReference getisAtSingle_Servo();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAtSingle#getAngle <em>Angle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle</em>'.
   * @see org.xtext.pruebaOperation.isAtSingle#getAngle()
   * @see #getisAtSingle()
   * @generated
   */
  EReference getisAtSingle_Angle();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.isAt <em>is At</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>is At</em>'.
   * @see org.xtext.pruebaOperation.isAt
   * @generated
   */
  EClass getisAt();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAt#getAngle1 <em>Angle1</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle1</em>'.
   * @see org.xtext.pruebaOperation.isAt#getAngle1()
   * @see #getisAt()
   * @generated
   */
  EReference getisAt_Angle1();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAt#getAngle2 <em>Angle2</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle2</em>'.
   * @see org.xtext.pruebaOperation.isAt#getAngle2()
   * @see #getisAt()
   * @generated
   */
  EReference getisAt_Angle2();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAt#getAngle3 <em>Angle3</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle3</em>'.
   * @see org.xtext.pruebaOperation.isAt#getAngle3()
   * @see #getisAt()
   * @generated
   */
  EReference getisAt_Angle3();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAt#getAngle4 <em>Angle4</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle4</em>'.
   * @see org.xtext.pruebaOperation.isAt#getAngle4()
   * @see #getisAt()
   * @generated
   */
  EReference getisAt_Angle4();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAt#getAngle5 <em>Angle5</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle5</em>'.
   * @see org.xtext.pruebaOperation.isAt#getAngle5()
   * @see #getisAt()
   * @generated
   */
  EReference getisAt_Angle5();

  /**
   * Returns the meta object for the containment reference list '{@link org.xtext.pruebaOperation.isAt#getAngle6 <em>Angle6</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Angle6</em>'.
   * @see org.xtext.pruebaOperation.isAt#getAngle6()
   * @see #getisAt()
   * @generated
   */
  EReference getisAt_Angle6();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Angle_res <em>Angle res</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Angle res</em>'.
   * @see org.xtext.pruebaOperation.Angle_res
   * @generated
   */
  EClass getAngle_res();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Angle_res#getAngle_res <em>Angle res</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Angle res</em>'.
   * @see org.xtext.pruebaOperation.Angle_res#getAngle_res()
   * @see #getAngle_res()
   * @generated
   */
  EAttribute getAngle_res_Angle_res();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Angle <em>Angle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Angle</em>'.
   * @see org.xtext.pruebaOperation.Angle
   * @generated
   */
  EClass getAngle();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Angle#getAngle <em>Angle</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Angle</em>'.
   * @see org.xtext.pruebaOperation.Angle#getAngle()
   * @see #getAngle()
   * @generated
   */
  EAttribute getAngle_Angle();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Time <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Time</em>'.
   * @see org.xtext.pruebaOperation.Time
   * @generated
   */
  EClass getTime();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Time#getTime <em>Time</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Time</em>'.
   * @see org.xtext.pruebaOperation.Time#getTime()
   * @see #getTime()
   * @generated
   */
  EAttribute getTime_Time();

  /**
   * Returns the meta object for class '{@link org.xtext.pruebaOperation.Servo <em>Servo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Servo</em>'.
   * @see org.xtext.pruebaOperation.Servo
   * @generated
   */
  EClass getServo();

  /**
   * Returns the meta object for the attribute '{@link org.xtext.pruebaOperation.Servo#getServo <em>Servo</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Servo</em>'.
   * @see org.xtext.pruebaOperation.Servo#getServo()
   * @see #getServo()
   * @generated
   */
  EAttribute getServo_Servo();

  /**
   * Returns the meta object for enum '{@link org.xtext.pruebaOperation.State <em>State</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for enum '<em>State</em>'.
   * @see org.xtext.pruebaOperation.State
   * @generated
   */
  EEnum getState();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PruebaOperationFactory getPruebaOperationFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.InitialImpl <em>Initial</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.InitialImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getInitial()
     * @generated
     */
    EClass INITIAL = eINSTANCE.getInitial();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute INITIAL__NAME = eINSTANCE.getInitial_Name();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference INITIAL__TIME = eINSTANCE.getInitial_Time();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.CommandImpl <em>Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.CommandImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getCommand()
     * @generated
     */
    EClass COMMAND = eINSTANCE.getCommand();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute COMMAND__NAME = eINSTANCE.getCommand_Name();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference COMMAND__TIME = eINSTANCE.getCommand_Time();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.rotateServoImpl <em>rotate Servo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.rotateServoImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getrotateServo()
     * @generated
     */
    EClass ROTATE_SERVO = eINSTANCE.getrotateServo();

    /**
     * The meta object literal for the '<em><b>Servo</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_SERVO__SERVO = eINSTANCE.getrotateServo_Servo();

    /**
     * The meta object literal for the '<em><b>Angle</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_SERVO__ANGLE = eINSTANCE.getrotateServo_Angle();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.rotateAllServosImpl <em>rotate All Servos</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.rotateAllServosImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getrotateAllServos()
     * @generated
     */
    EClass ROTATE_ALL_SERVOS = eINSTANCE.getrotateAllServos();

    /**
     * The meta object literal for the '<em><b>Angle1</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_ALL_SERVOS__ANGLE1 = eINSTANCE.getrotateAllServos_Angle1();

    /**
     * The meta object literal for the '<em><b>Angle2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_ALL_SERVOS__ANGLE2 = eINSTANCE.getrotateAllServos_Angle2();

    /**
     * The meta object literal for the '<em><b>Angle3</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_ALL_SERVOS__ANGLE3 = eINSTANCE.getrotateAllServos_Angle3();

    /**
     * The meta object literal for the '<em><b>Angle4</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_ALL_SERVOS__ANGLE4 = eINSTANCE.getrotateAllServos_Angle4();

    /**
     * The meta object literal for the '<em><b>Angle5</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_ALL_SERVOS__ANGLE5 = eINSTANCE.getrotateAllServos_Angle5();

    /**
     * The meta object literal for the '<em><b>Angle6</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ROTATE_ALL_SERVOS__ANGLE6 = eINSTANCE.getrotateAllServos_Angle6();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.ResultImpl <em>Result</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.ResultImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getResult()
     * @generated
     */
    EClass RESULT = eINSTANCE.getResult();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute RESULT__NAME = eINSTANCE.getResult_Name();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RESULT__TIME = eINSTANCE.getResult_Time();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.ConditionsImpl <em>Conditions</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.ConditionsImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getConditions()
     * @generated
     */
    EClass CONDITIONS = eINSTANCE.getConditions();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute CONDITIONS__NAME = eINSTANCE.getConditions_Name();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CONDITIONS__TIME = eINSTANCE.getConditions_Time();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.SolutionImpl <em>Solution</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.SolutionImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getSolution()
     * @generated
     */
    EClass SOLUTION = eINSTANCE.getSolution();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SOLUTION__NAME = eINSTANCE.getSolution_Name();

    /**
     * The meta object literal for the '<em><b>Angle res</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SOLUTION__ANGLE_RES = eINSTANCE.getSolution_Angle_res();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.isAtSingleImpl <em>is At Single</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.isAtSingleImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getisAtSingle()
     * @generated
     */
    EClass IS_AT_SINGLE = eINSTANCE.getisAtSingle();

    /**
     * The meta object literal for the '<em><b>Servo</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT_SINGLE__SERVO = eINSTANCE.getisAtSingle_Servo();

    /**
     * The meta object literal for the '<em><b>Angle</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT_SINGLE__ANGLE = eINSTANCE.getisAtSingle_Angle();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.isAtImpl <em>is At</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.isAtImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getisAt()
     * @generated
     */
    EClass IS_AT = eINSTANCE.getisAt();

    /**
     * The meta object literal for the '<em><b>Angle1</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT__ANGLE1 = eINSTANCE.getisAt_Angle1();

    /**
     * The meta object literal for the '<em><b>Angle2</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT__ANGLE2 = eINSTANCE.getisAt_Angle2();

    /**
     * The meta object literal for the '<em><b>Angle3</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT__ANGLE3 = eINSTANCE.getisAt_Angle3();

    /**
     * The meta object literal for the '<em><b>Angle4</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT__ANGLE4 = eINSTANCE.getisAt_Angle4();

    /**
     * The meta object literal for the '<em><b>Angle5</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT__ANGLE5 = eINSTANCE.getisAt_Angle5();

    /**
     * The meta object literal for the '<em><b>Angle6</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IS_AT__ANGLE6 = eINSTANCE.getisAt_Angle6();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.Angle_resImpl <em>Angle res</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.Angle_resImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getAngle_res()
     * @generated
     */
    EClass ANGLE_RES = eINSTANCE.getAngle_res();

    /**
     * The meta object literal for the '<em><b>Angle res</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANGLE_RES__ANGLE_RES = eINSTANCE.getAngle_res_Angle_res();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.AngleImpl <em>Angle</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.AngleImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getAngle()
     * @generated
     */
    EClass ANGLE = eINSTANCE.getAngle();

    /**
     * The meta object literal for the '<em><b>Angle</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute ANGLE__ANGLE = eINSTANCE.getAngle_Angle();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.TimeImpl <em>Time</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.TimeImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getTime()
     * @generated
     */
    EClass TIME = eINSTANCE.getTime();

    /**
     * The meta object literal for the '<em><b>Time</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute TIME__TIME = eINSTANCE.getTime_Time();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.impl.ServoImpl <em>Servo</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.impl.ServoImpl
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getServo()
     * @generated
     */
    EClass SERVO = eINSTANCE.getServo();

    /**
     * The meta object literal for the '<em><b>Servo</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute SERVO__SERVO = eINSTANCE.getServo_Servo();

    /**
     * The meta object literal for the '{@link org.xtext.pruebaOperation.State <em>State</em>}' enum.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.xtext.pruebaOperation.State
     * @see org.xtext.pruebaOperation.impl.PruebaOperationPackageImpl#getState()
     * @generated
     */
    EEnum STATE = eINSTANCE.getState();

  }

} //PruebaOperationPackage
