/**
 * generated by Xtext 2.26.0
 */
package org.xtext.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.cPTester.Scenario;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class CPTesterGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    String _className = this.className(resource);
    String _plus = (_className + ".txt");
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    fsa.generateFile(_plus, 
      this.toCode(((Scenario) _head)));
  }
  
  public CharSequence toCode(final Scenario scenario) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Class: Machine");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.append("StateMachine: ");
    String _name = scenario.getName();
    _builder.append(_name, "\t\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.append("PseudoState: Initial");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("PseudoState: Final");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("PseudoState: Error");
    _builder.newLine();
    _builder.append("\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Transition: (Initial->Given)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Guard: []");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("State: Given");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Activity: Arm.BaseServo.ServosOperations.posInicial(1000);");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("State: GivenWarning");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Activity: MessReport(mWarning, Warning Time)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Transition: (GivenWarning->Given)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Guard: []");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Transition: (Given->GivenWarning)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Guard: Arm.BaseServo.ServosOperations.Time(1000)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Transition: (Given->When1)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Guard: Arm.BaseServo.ServosOperations.isAtOperation(90,90,90,90,90,90,2)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("State: When1");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Activity: Arm.BaseServo.ServosOperations.");
    String _name_1 = scenario.getGiven().getName();
    _builder.append(_name_1, "\t\t\t\t\t");
    _builder.append("1, 90, 1000) ");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Transition: (When1->Error)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Guard: LaterThan(oRunTime, 1000)\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.newLine();
    _builder.append("\t\t\t\t");
    _builder.append("Transition: (When1->Final)");
    _builder.newLine();
    _builder.append("\t\t\t\t\t");
    _builder.append("Guard: Arm.BaseServo.ServosOperations.isAtSingleOperation(1, 90, 1000)");
    _builder.newLine();
    return _builder;
  }
  
  public String className(final Resource res) {
    String name = res.getURI().lastSegment();
    return name.substring(0, name.indexOf("."));
  }
}
