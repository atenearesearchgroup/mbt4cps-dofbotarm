/*
 * generated by Xtext 2.26.0
 */
package org.xtext.generator

import org.eclipse.emf.ecore.resource.Resource
import org.eclipse.xtext.generator.AbstractGenerator
import org.eclipse.xtext.generator.IFileSystemAccess2
import org.eclipse.xtext.generator.IGeneratorContext
import java.util.Scanner
import org.xtext.cPTester.Scenario

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
class CPTesterGenerator extends AbstractGenerator {

	override void doGenerate(Resource resource, IFileSystemAccess2 fsa, IGeneratorContext context) {
		//File to create (functions className and toCode must be implemented)
		fsa.generateFile(resource.className + ".txt", //The extension that we want to have in our generated file
		
		toCode(resource.contents.head as Scenario))
}
	
	def toCode(Scenario scenario) {
		'''Class: Machine
			StateMachine: «scenario.name»
				PseudoState: Initial
				PseudoState: Final
				PseudoState: Error
			
				Transition: (Initial->Given)
					Guard: []
					
				State: Given
					Activity: Arm.BaseServo.ServosOperations.posInicial(1000);
					
				State: GivenWarning
					Activity: MessReport(mWarning, Warning Time)
					
				Transition: (GivenWarning->Given)
					Guard: []
							
				Transition: (Given->GivenWarning)
					Guard: Arm.BaseServo.ServosOperations.Time(1000)
					
				Transition: (Given->When1)
					Guard: Arm.BaseServo.ServosOperations.isAtOperation(90,90,90,90,90,90,2)
						
				State: When1
					Activity: Arm.BaseServo.ServosOperations.«scenario.given.name»1, 90, 1000) 
				
				Transition: (When1->Error)
					Guard: LaterThan(oRunTime, 1000)		
					
				Transition: (When1->Final)
					Guard: Arm.BaseServo.ServosOperations.isAtSingleOperation(1, 90, 1000)
					'''
	}
	
//We define a function className that will be used to obtain the name of the file with extension 'wrld’

def className(Resource res){
//We don't need to specify variable types

var name = res.URI.lastSegment //We assign the name of the ctry file
return name.substring(0, name.indexOf('.')) //And return the part that is before the extension of the file
//For instance, if we have sample.wlrd, then we obtain name sample.txt
}
}
