/**
 * generated by Xtext 2.26.0
 */
package org.xtext.dofbotDSL.impl;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

import org.eclipse.emf.ecore.impl.EPackageImpl;

import org.xtext.dofbotDSL.Angles;
import org.xtext.dofbotDSL.Arm;
import org.xtext.dofbotDSL.DofbotDSLFactory;
import org.xtext.dofbotDSL.DofbotDSLPackage;
import org.xtext.dofbotDSL.RotateMultiple;
import org.xtext.dofbotDSL.RotateSingle;
import org.xtext.dofbotDSL.Servos;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model <b>Package</b>.
 * <!-- end-user-doc -->
 * @generated
 */
public class DofbotDSLPackageImpl extends EPackageImpl implements DofbotDSLPackage
{
  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass armEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rotateMultipleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass rotateSingleEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass servosEClass = null;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private EClass anglesEClass = null;

  /**
   * Creates an instance of the model <b>Package</b>, registered with
   * {@link org.eclipse.emf.ecore.EPackage.Registry EPackage.Registry} by the package
   * package URI value.
   * <p>Note: the correct way to create the package is via the static
   * factory method {@link #init init()}, which also performs
   * initialization of the package, or returns the registered package,
   * if one already exists.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.eclipse.emf.ecore.EPackage.Registry
   * @see org.xtext.dofbotDSL.DofbotDSLPackage#eNS_URI
   * @see #init()
   * @generated
   */
  private DofbotDSLPackageImpl()
  {
    super(eNS_URI, DofbotDSLFactory.eINSTANCE);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private static boolean isInited = false;

  /**
   * Creates, registers, and initializes the <b>Package</b> for this model, and for any others upon which it depends.
   *
   * <p>This method is used to initialize {@link DofbotDSLPackage#eINSTANCE} when that field is accessed.
   * Clients should not invoke it directly. Instead, they should simply access that field to obtain the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #eNS_URI
   * @see #createPackageContents()
   * @see #initializePackageContents()
   * @generated
   */
  public static DofbotDSLPackage init()
  {
    if (isInited) return (DofbotDSLPackage)EPackage.Registry.INSTANCE.getEPackage(DofbotDSLPackage.eNS_URI);

    // Obtain or create and register package
    Object registeredDofbotDSLPackage = EPackage.Registry.INSTANCE.get(eNS_URI);
    DofbotDSLPackageImpl theDofbotDSLPackage = registeredDofbotDSLPackage instanceof DofbotDSLPackageImpl ? (DofbotDSLPackageImpl)registeredDofbotDSLPackage : new DofbotDSLPackageImpl();

    isInited = true;

    // Create package meta-data objects
    theDofbotDSLPackage.createPackageContents();

    // Initialize created meta-data
    theDofbotDSLPackage.initializePackageContents();

    // Mark meta-data to indicate it can't be changed
    theDofbotDSLPackage.freeze();

    // Update the registry and return the package
    EPackage.Registry.INSTANCE.put(DofbotDSLPackage.eNS_URI, theDofbotDSLPackage);
    return theDofbotDSLPackage;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getArm()
  {
    return armEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getArm_Name()
  {
    return (EAttribute)armEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArm_RotateMultiple()
  {
    return (EReference)armEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getArm_RotateSingle()
  {
    return (EReference)armEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRotateMultiple()
  {
    return rotateMultipleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRotateMultiple_Name()
  {
    return (EAttribute)rotateMultipleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRotateMultiple_Angle()
  {
    return (EReference)rotateMultipleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRotateMultiple_Time()
  {
    return (EAttribute)rotateMultipleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getRotateSingle()
  {
    return rotateSingleEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRotateSingle_Name()
  {
    return (EAttribute)rotateSingleEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRotateSingle_Servo()
  {
    return (EReference)rotateSingleEClass.getEStructuralFeatures().get(1);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EReference getRotateSingle_Angle()
  {
    return (EReference)rotateSingleEClass.getEStructuralFeatures().get(2);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getRotateSingle_Time()
  {
    return (EAttribute)rotateSingleEClass.getEStructuralFeatures().get(3);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getServos()
  {
    return servosEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getServos_Name()
  {
    return (EAttribute)servosEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EClass getAngles()
  {
    return anglesEClass;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EAttribute getAngles_Name()
  {
    return (EAttribute)anglesEClass.getEStructuralFeatures().get(0);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DofbotDSLFactory getDofbotDSLFactory()
  {
    return (DofbotDSLFactory)getEFactoryInstance();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isCreated = false;

  /**
   * Creates the meta-model objects for the package.  This method is
   * guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void createPackageContents()
  {
    if (isCreated) return;
    isCreated = true;

    // Create classes and their features
    armEClass = createEClass(ARM);
    createEAttribute(armEClass, ARM__NAME);
    createEReference(armEClass, ARM__ROTATE_MULTIPLE);
    createEReference(armEClass, ARM__ROTATE_SINGLE);

    rotateMultipleEClass = createEClass(ROTATE_MULTIPLE);
    createEAttribute(rotateMultipleEClass, ROTATE_MULTIPLE__NAME);
    createEReference(rotateMultipleEClass, ROTATE_MULTIPLE__ANGLE);
    createEAttribute(rotateMultipleEClass, ROTATE_MULTIPLE__TIME);

    rotateSingleEClass = createEClass(ROTATE_SINGLE);
    createEAttribute(rotateSingleEClass, ROTATE_SINGLE__NAME);
    createEReference(rotateSingleEClass, ROTATE_SINGLE__SERVO);
    createEReference(rotateSingleEClass, ROTATE_SINGLE__ANGLE);
    createEAttribute(rotateSingleEClass, ROTATE_SINGLE__TIME);

    servosEClass = createEClass(SERVOS);
    createEAttribute(servosEClass, SERVOS__NAME);

    anglesEClass = createEClass(ANGLES);
    createEAttribute(anglesEClass, ANGLES__NAME);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  private boolean isInitialized = false;

  /**
   * Complete the initialization of the package and its meta-model.  This
   * method is guarded to have no affect on any invocation but its first.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void initializePackageContents()
  {
    if (isInitialized) return;
    isInitialized = true;

    // Initialize package
    setName(eNAME);
    setNsPrefix(eNS_PREFIX);
    setNsURI(eNS_URI);

    // Create type parameters

    // Set bounds for type parameters

    // Add supertypes to classes

    // Initialize classes and features; add operations and parameters
    initEClass(armEClass, Arm.class, "Arm", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getArm_Name(), ecorePackage.getEString(), "name", null, 0, 1, Arm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArm_RotateMultiple(), this.getRotateMultiple(), null, "rotateMultiple", null, 0, -1, Arm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getArm_RotateSingle(), this.getRotateSingle(), null, "rotateSingle", null, 0, -1, Arm.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rotateMultipleEClass, RotateMultiple.class, "RotateMultiple", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRotateMultiple_Name(), ecorePackage.getEString(), "name", null, 0, 1, RotateMultiple.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRotateMultiple_Angle(), this.getAngles(), null, "Angle", null, 0, -1, RotateMultiple.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRotateMultiple_Time(), ecorePackage.getEInt(), "time", null, 0, 1, RotateMultiple.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(rotateSingleEClass, RotateSingle.class, "RotateSingle", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getRotateSingle_Name(), ecorePackage.getEString(), "name", null, 0, 1, RotateSingle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRotateSingle_Servo(), this.getServos(), null, "Servo", null, 0, 1, RotateSingle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEReference(getRotateSingle_Angle(), this.getAngles(), null, "Angle", null, 0, 1, RotateSingle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, IS_COMPOSITE, !IS_RESOLVE_PROXIES, !IS_UNSETTABLE, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);
    initEAttribute(getRotateSingle_Time(), ecorePackage.getEInt(), "time", null, 0, 1, RotateSingle.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(servosEClass, Servos.class, "Servos", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getServos_Name(), ecorePackage.getEInt(), "name", null, 0, 1, Servos.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    initEClass(anglesEClass, Angles.class, "Angles", !IS_ABSTRACT, !IS_INTERFACE, IS_GENERATED_INSTANCE_CLASS);
    initEAttribute(getAngles_Name(), ecorePackage.getEInt(), "name", null, 0, 1, Angles.class, !IS_TRANSIENT, !IS_VOLATILE, IS_CHANGEABLE, !IS_UNSETTABLE, !IS_ID, IS_UNIQUE, !IS_DERIVED, IS_ORDERED);

    // Create resource
    createResource(eNS_URI);
  }

} //DofbotDSLPackageImpl
