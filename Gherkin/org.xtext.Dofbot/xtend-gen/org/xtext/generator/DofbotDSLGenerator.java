/**
 * generated by Xtext 2.26.0
 */
package org.xtext.generator;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.ecore.resource.Resource;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.generator.AbstractGenerator;
import org.eclipse.xtext.generator.IFileSystemAccess2;
import org.eclipse.xtext.generator.IGeneratorContext;
import org.eclipse.xtext.xbase.lib.IterableExtensions;
import org.xtext.dofbotDSL.Arm;

/**
 * Generates code from your model files on save.
 * 
 * See https://www.eclipse.org/Xtext/documentation/303_runtime_concepts.html#code-generation
 */
@SuppressWarnings("all")
public class DofbotDSLGenerator extends AbstractGenerator {
  @Override
  public void doGenerate(final Resource resource, final IFileSystemAccess2 fsa, final IGeneratorContext context) {
    String _className = this.className(resource);
    String _plus = (_className + ".txt");
    EObject _head = IterableExtensions.<EObject>head(resource.getContents());
    fsa.generateFile(_plus, 
      this.toCode(((Arm) _head)));
  }
  
  public CharSequence toCode(final Arm arm) {
    StringConcatenation _builder = new StringConcatenation();
    _builder.append("Hacer operacion ");
    String _name = arm.getRotateMultiple().get(0).getName();
    _builder.append(_name);
    _builder.append(" para angulo ");
    int _name_1 = arm.getRotateMultiple().get(0).getAngle().get(0).getName();
    _builder.append(_name_1);
    _builder.append(" con tiempo ");
    int _time = arm.getRotateMultiple().get(0).getTime();
    _builder.append(_time);
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("Hacer operacion ");
    String _name_2 = arm.getRotateMultiple().get(1).getName();
    _builder.append(_name_2, "\t\t");
    _builder.append(" para angulo ");
    int _name_3 = arm.getRotateMultiple().get(1).getAngle().get(1).getName();
    _builder.append(_name_3, "\t\t");
    _builder.append(" con tiempo ");
    int _time_1 = arm.getRotateMultiple().get(1).getTime();
    _builder.append(_time_1, "\t\t");
    _builder.newLineIfNotEmpty();
    _builder.append("\t\t");
    _builder.append("Hacer operacion ");
    String _name_4 = arm.getRotateSingle().get(1).getName();
    _builder.append(_name_4, "\t\t");
    _builder.append(" para id ");
    int _name_5 = arm.getRotateSingle().get(1).getServo().getName();
    _builder.append(_name_5, "\t\t");
    _builder.append(" con angulo ");
    int _name_6 = arm.getRotateSingle().get(1).getAngle().getName();
    _builder.append(_name_6, "\t\t");
    _builder.append(" con tiempo ");
    int _time_2 = arm.getRotateSingle().get(1).getTime();
    _builder.append(_time_2, "\t\t");
    return _builder;
  }
  
  public String className(final Resource res) {
    String name = res.getURI().lastSegment();
    return name.substring(0, name.indexOf("."));
  }
}
